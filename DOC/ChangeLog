** tagged as 1.3.0

2003-02-10  Petr Stehlik  <pstehlik@sophics.cz>

* pokey.c, monitor.c: added include. Interesting is that my compiler at
  home hasn't complained but the gcc-3.2.2 here at work was uncompromising.
* atari.c: "--help", "--usage" and "--version" recognized now, though the
  former two just ask user to type "-help" again.
* pokeysnd.[ch]: fixed typo errors
* configure.in: alternate user and system-wide config file names for DOS
  and TOS ($HOME/atari800.cfg and C:\atari800.cfg) since their filesystem
  is still limited to 8+3 filenames.
* win32/sound.c: restored original behaviour of "-quality" switch.

2003-02-09  Petr Stehlik  <pstehlik@sophics.cz>

* pokey.[ch]: 'stereo_enabled' variable moved to rt-config.c
* prompts.[ch]: YesNo() renamed to GetYesNo() and added GetYesNoAsInt()
  that allows user to enter Y/N in the RtConfigUpdate process
* rt-config.c: added 'enable_new_pokey'
  * added "ENABLE_NEW_POKEY" and "STEREO_POKEY" config options
  * removed all the code for backward compatibility since it could cause
    confusion if both old and new option existed in one config file
  * updated for GetYesNoAsInt() prompt
  * completely reworked the way the config file is searched for on disk:
    now it first tries in user's $HOME folder file named ".atari800.cfg"
    (which is configurable at compile-time) and later it falls back
    to system wide "/etc/atari800.cfg" (also configurable at compile-time).
  * also saving to user defined config file (-config <fname>) should work
    now (contrary to previous state where it saved to default file).
  * actual config filename is printed so users are sure which file was
    used (if their configured, or $HOME, or the system wide one)
* ui.c: updated for 'enable_new_pokey'
* pokeysnd.c: it wasn't clear to me how important the 'quality' parameter
  was so I added a function Pokey_set_quality(int). If it wasn't that
  important (was for testing only?) then let's remove this function.
* pokeysnd.c: a new function "Pokey_DoInit()" does the actual initialization
  of the Pokey emulation. It's been separated from Pokey_sound_init to 
  allow calling from UI.
* atari_amiga.c, sound.c, sound_falcon.c, dos/sound_dos.c, win32/sound.c,
  wince/sound.c: updated for Pokey_sound_init()'s number of parameters.
* atari_sdl.c: removed "-mzpokey", "-oldpokey" and "-stereo" command line
  switches. This job (cleaning up the bloated command line options) was
  actually one of the main reasons for all my today's changes.
* configure.in: STEREO sound enabled by default. Shouldn't hurt since
  at the same time the 'enabled_stereo' is FALSE by default. So basically
  released binaries will be able to turn on stereo anytime users'll wish.
  Slower machines might want to disable this (as well as pixel-exact
  Antic emulation and a few more things) before building. Configure script
  could even take care of that if it knew which targets are running on
  slow machines.
* atari.h, DOC/NEWS, DOC/INSTALL updated with info from above.

** tagged as 1.2.10

2003-02-09  Petr Stehlik  <pstehlik@sophics.cz>

* pokeysnd.[ch]: added Pokey_set/get_quality() that allows me to switch
  the Pokey routines (Ron Fries/Michael Borisov) on-the-fly from UI.
* ui.c: Sound Settings submenu added. Allows changing the Pokey routines
  on-the-fly (automatically reboots) and also Mono/Stereo (if compiled in).
* emuos.lis: updated URL

2003-02-08  Petr Stehlik  <pstehlik@sophics.cz>

* atari_sdl.c: signal keyboard interrupt only when it's enabled
  (bugfix copied from input.c where it was fixed by Piotr)
* configure.in, acconfig.h: autoconf 2.5x required again. OS/2 and other
  platforms with old autoconf can use the pre-generated configure script
  found in released versions.
* atari_curses.c: exit() was not defined so I replaced it by return.
* atari_x11.c: some variables are used only if SHM is not defined
* configure.in, ui_basic.c: "CURSES" replaced by "USE_CURSES" so that
  compiler doesn't complain about a redefined stuff
* pokeysnd.c: null functions defined properly to avoid compiler warnings


2003-02-04  Petr Stehlik  <pstehlik@sophics.cz>

* configure.in, acconfig.h: after few days of autoconf 2.5x support I
  rolled back the changes since Ken Ames had a problem with upgrading
  autoconf on OS/2.

** tagged as 1.2.9

2003-01-27  Perry McFarlane  <ce596@torfree.net>

  I am going to send my cycle-exact patch now because I don't have any
  more time to work on it.  Hopefully it will be useful.  I hope
  it is not a problem to apply the patches.  I tried to make them
  to the current version.  They need more testing, though.
  In particular state saving is not tested.

  I have been working over the past few weeks on some improvements
  to the Atari800 emulator.
  I wanted to add support for mid-scanline changes to colours
  and players which are used by some (few) games and demos.
  I have written some code that does this, as a patch to
  the current code base.
  To avoid using the new code './configure --disable-cycleexact'
  This patch will fix display bugs in Master of the Lamps,
  Mail order monsters etc.
  However there were still a few bugs in some programs (see BUGS)
  and I haven't had time to fully test it.   I also have run out
  of personal time to work on this code for a while so I won't have
  much time to maintain it.   I think I should submit it now and
  hopefully it can be used to help improve the emulator.  If I had
  more time I would have completed more of the changes I wanted, see
  TODO in the code for some future ideas.
  As for efficency, it is probably going to be slower than normal
  to use this code, but it seems OK on my (fast) machine, so
  since it is a #define to remove the new technique I hope this
  will not be a problem.

  There is also a test program called T7.bas which I was using to
  help find out how the real Atari's timing works, it might
  be of interest to someone. (probably not) I am going to include
  it anyways along with some brief documentation. There is asm code
  t7.asm and a c program bdata.c that converts asm to Atari basic data
  statements.   T7.asm can be compiled with ATASM.

* antic.c, gtia.c, cycle_map.c:
  Cycle-exact changes to colours, player horiztonal positions, player
  graphics.
  Basic idea: arrays cpu2antic and antic2cpu are created in
  cycle_map.c  Antic.c selects the correct cycle map
  based on the IR mode and scanline #, DMACTL screen width and HSCROL
  then cpu2antic_ptr and antic2cpu_ptr will convert the cpu's cycles
  to those of antic and vice-versa.  xpos will now represent the
  cpu's perception of cycles and not the acutual xpos.
  font_cycles, DMAR etc are not used.  When the cpu changes
  a display register, the display is updated partially to the point
  where the change occurs.  A function draw_partial_scanline does
  this using the existing antic drawing code in a somewhat hackish way.

  cycle-exact GTIA11_DELAY for "Demonic laughter" demo.
  using ring buffer approach

  Improved handling of DMACTL changes in the middle of a scanline.
  Fixes: Decathlon, Mail order monsters.
  Emulation of a DMACTL width change bug.

* cpu.c, monitor.c:
  The monitor remembers xpos and ypos in a buffer.
  A new command, YBREAK, can cause a breakpoint at a given scanline(ypos)
  setting YBREAK ypos+1000 causes a flickering line to appear at
  that point on the screen rather than breaking the cpu.  This allows
  debugging what happens at that scanline more easily.
  The memmove approach for remember_JMP, remmeber_PC has been replaced
  with a more efficent ring buffer approach
  The HISTORY command now gives a disassembly of the last N instructions
  where N=64 by default, and if the new cycle-exact code is used, it
  also gives the xpos and ypos of those instructions.
  correction to SIZEP2 SIZEP3 equates

* pokey.c:
  cycle-exact random number generator reads.

** tagged as 1.2.8

2003-01-27  Jason Duerstock  <jason@cluephone.com>

* PAGED_ATTRIB support, removing the attrib[] array and replacing it with 
  a map of 256 pointers (one for each page of memory.  If the pointer is 
  NULL, then the  memory[] array will be accessed directly.

  This change is activated through './configure --enable-paged'.

  In my estimation, this should improve the performance of the emulator,
  removing 64K of cache usage, and short-circuiting some switch {} 
  statements.

  Note that this will render old saved-state files incompatible.

  There are a few short bits not finished yet, one of which being the
  "H:" device patch, which is mapped into 0xd1xx (parallel bus space),
  the other being state saving.

  My idea on how to do this is through the following struct:

	map_save save_map[2] = {
	        {0,     NULL,   NULL},          /* RAM */
	        {1,     NULL,   ROM_PutByte}    /* ROM */
	};

  The readmap and writemap will be compared with the pair of pointers
  in the struct, and a byte (the first column) will be saved for each
  page.

  On restore, the byte will be used to reconstruct the readmap and 
  writemap.

* Several warnings have been cleaned up through inclusion of the proper 
  headers.

* 'make distclean' has been added, to remove all the files generated
  from autoconf and ./configure

  In the process, I removed the (admittedly ugly) memory.[ch] redirection
  to memory-[pd].[ch].  If the general consensus is that PAGED_ATTRIB
  is a step in the right direction, then I will look at tacking PAGED_MEM
  back on through PAGED_ATTRIB.

  Any comments, suggestions, critiques, etc are appreciated.

joy> something has to be done regarding the saved-state files. Backward
     compatibility is a key thing in this area.

** tagged as 1.2.7

2003-01-27  Mark Grebe  <markgrebe@yahoo.com>
* devices.c:
  I've finally got around to finishing the upgrade to
  the hard disk emulation.  It now fully support
  subdirectories.  It supports CREDIR, RMDIR, CWD, ?DIR
  in SpartaDos and BW-DOS.  It also supports their XIO
  equivelents, and subdirectories work in all the other
  DOS commands as well.  It uses '>' and '>>' as
  directory seperators like SpartaDOS and BW-DOS.  I've
  also added support for the binary load commands, and
  added a path string for use with the H: devices, as
  the standard path won't work for them.

  It really needs a documentation writeup, but I've
  been gettting swamped at work, so that will come as I
  get time, but thought I would get this to everyone
  now, as I released it in the last release of
  Atari800MacX.  I've tested it on the Mac, as well as
  Windows and the Linux SDL port.

  The only other change that  is needed, is that
  Device_HHINIT should be called during Coldstart(), so
  that the working directories get reset to the root
  directory.

joy> Note that it may needs the same patches that were applied
     to devices.c in version 1.14. But I don't have an Amiga handy
     so I'll let someone else do it.

** tagged as 1.2.6

2003-01-27  Piotr Fusik  <fox@scene.pl>
* antic.c: swapped GTIA and CTIA artifacting modes
  (swapped by mistake in 0.9.9j)
* input.c: signal keyboard interrupt only when it's enabled
  (fixes Atari crash after SHIFT and * in Super Pacman 5200)

2002-12-16  Krzysztof Nikiel  <knik@poczta.onet.pl>
* colours.c: corrected color/BW conversion (Vasyl was right)

2002-12-08  Krzysztof Nikiel  <knik@poczta.onet.pl>
* pokeysnd.c mzpokeysnd.c: Added 16bit and quality sound setting support.
  Added multiple sound engines support.

2002-12-04  Mark Grebe <markgrebe@yahoo.com>
* devices.c: device H: now fully emulates the standard DOS functions
  Rename, Delete, Lock, Unlock, Note, Point, and Open for Update.
  Also changed the directory listing to look like the standard Atari
  DOS 2.0 listing. (The sector count is based on 256 byte sectors).

** released as 1.2.5 on 2002/12/02

2002-11-25  Piotr Fusik  <fox@scene.pl>
* DOC/cart.txt: fixed a few typos

2002-11-06  Petr Stehlik  <pstehlik@sophics.cz>
* ui.c:
  - applied patch from Ed Cogburn that fixes subsequent mounting
    of R/W disks in slot that was mounted R/O previously.
  - finally implemented the R/W <-> R/O mode switching using the Space Bar.
    Please note that this R/W <-> R/O switch is just temporary and does
    not change the writeprotect flag of ATR images. Besides, it cannot
    override this flag so you actually can't mount a writeprotected ATR
    image read/write using this Space Bar toggle.

* atari.c: Ken Ames sent me a very simple patch that is supposed to allow
    compiling the Atari800 on OS/2 "using Hob X11, XFree86, or IBM's X11
    server".

2002-09-16  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt: five new cartridge types (Nir Dary)

2002-09-05  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt, DOC/README: seven new cartridge types
  (by Nir Dary)

2002-08-26  Adam Bienias
* pokeysnd.c: a fix for better quality of sound

2002-08-21  Piotr Fusik  <fox@scene.pl>
* antic.c: ANTIC mode E + GTIA mode 9 ("Unconventional 2k", "Ass Kisiel")

2002-08-15  Piotr Fusik  <fox@scene.pl>
* DOC/BUGS: "Numen" soundtrack
* cartridge.[ch], ui.c, DOC/cart.txt: 1 MB XEGS cart
* input.c: Amiga/ST mouse right button ("Bombdown")
* input.h, input.c, pia.c: MultiJoy4 interface (4 joysticks for XL/XE)

** released as 1.2.4

2002-08-07  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c:
  - added atexit(SDL_Quit) to clean up after unsuccessful initialization.
  - fixed "-help" so that it doesn't initialize graphics mode. 
  - added "-sound" and "-nosound" support so you can disable sound if
    your sound card is not plugged in :)
  - added "-dsprate" support
  - added support for the configure option --disable-SOUND
  - added Aflushlog() to Atari_Exit() thus debug info is displayed now
  - when sound card init failed the application continues to run with sound
    disabled (previously it was exiting immediately)
* atari_sdl.c, atari_falcon.c, cassette.c, atari.c, atari_vga.c:
  fixed "-help" formatting
* atari_curses.c: added "-help"
* atari.c, atari_curses.c, atari_x11.c: added Aflushlog() to Atari_Exit()
* atari_x11.c: fixed the clean up code in Atari_Exit(), added help_only mode
* sound.c: all printf's changed to Aprintf().
* atari.c: "-v" or "-version" displays the version correctly now
* atari_vga.c: added help_only mode and made sure Atari_Exit is aware of that
* sound_dos.c: removed EOL ("\n") from Aprint() (it adds the \n automatically)

2002-07-24  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt, DOC/README: 256K and 512K XEGS carts
  (thanks to Nir Dary)

2002-07-14  Piotr Fusik  <fox@scene.pl>
* atari.c, memory-d.c, ui.c: emulation of 576K and 1088K RAM machines
* pia.c: removed a hack that affected 1088 XE
* antic.c, memory-d.c, atari800.man: separate ANTIC access to extended memory
  for 130 XE and 320 Compy Shop
* DOC/README: updated features

2002-07-11  Krzysztof Nikiel  <knik@poczta.onet.pl>
* configure.in: Freature processing redesigned to be more consistent.
  Correct enable/disable info is printed in help.

** released as 1.2.3

2002-07-04  Vasyl Tsvirkunov  <vasyl@pacbell.net>
* ui.c,gtia.c,atari.h,cassette.h: cassette image loading is available from
  main menu. Also, main menu allows to persist "Hold Start" setting.
  Interlaced screenshot is commented out in main menu.
* ui_wince.c: updated to reflect above changes (one port-specific item was
  piggyback on interlaced screenshot, had to move).

2002-07-04  Piotr Fusik  <fox@scene.pl>
* atari.c, memory-d.c, ui.c: emulation of 16K RAM machines: 400 and 600XL
* cpu.c: cycle-exact LSR $D01A
* input.c: after playing with real paddles changed mouse_pot_min to 1
* monitor.c: fixed optype6502[] to match unofficial instructions

2002-06-27   Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: updated LPTjoy support to compile under Linux only. If there's
  another Unix flavor that can read parallel port using ioctl then it can be
  easily added. Just define LPTJOY for it (see the begining of atari_sdl.c).

2002-06-27  Piotr Wiszowaty  <pwiszowa@elka.pw.edu.pl>
* atari_sdl.c: added LPTjoy support for Linux

2002-06-23  Petr Stehlik  <pstehlik@sophics.cz>
* OK, the "-palette" patch from Andrew was completely wrong. I fixed it
  the right way and when I was at it I also moved the "-palette" command
  line option from main atari.c to colours.c.
* I also decided to fix the command line options in general, so I made some
  changes to atari.c and atari_x11.c.
* At last I corrected a bunch of things in atari_sdl.c so that now SDL port
  recognizes "-help". The other options now use single "-" to conform to
  the rest of Atari800 application.

2002-06-20  Petr Stehlik  <pstehlik@sophics.cz>
* atari.c: "unistd" header included - it should fix a start problem on FreeBSD
           4.5 according to an anonymous patch on sf.net.
* colours.c: loaded color palettes were ignored. Andrew Church posted a patch
             on sf.net that fixes it.
* atari800.man: manual page updated by Rob McMullen

2002-04-11  Piotr Fusik  <fox@scene.pl>
* pokey.c: allow high-speed disk i/o (Alpha-Load works)

2002-04-07  Christian Groessler <cpg@aladdin.de> and Petr Stehlik
* non-ANSI "t" parameter in fopen ("rt" and "wt" used for CR/LF files
  in DOS-like operating systems) removed since it was causing problems
  with KallistiOS Dreamcast library. Linux glibc could also be affected
  as it aborts scanning the mode parameter when it encounters an unknown
  char (consider "wt+"). Code was updated to take care of the possible
  extra \r before \n at end of fgets string. fputs() should be OK as
  the text mode is most probably the default mode.

2002-03-29  Vasyl Tsvirkunov <vasyl@pacbell.net>
* Dirty update scheme is completed

2002-03-18  Piotr Fusik  <fox@scene.pl>
* antic.c: NMIST bit 5 is external NMI (not reset) status in Antic,
  unused in Atari
* input.c: second button in 5200 joystick generates "Break key" IRQ
* monitor.c: "DLIST" now accepts address as an argument

2002-02-13  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: fixed screen offset in 32bpp (thanks to Suzanne Archibald)
* atari_sdl.c: fixed sound initialisation (thanks to Tomas Mraz)
* pokey.c: fixed sound channel 1 in stereo mode (thanks to Radek Sterba)

2002-02-04  Piotr Fusik  <fox@scene.pl>
* DOC/BUGS: updated list of games

2002-01-10  Jindrich Kubec <kubecj@asw.cz>
* new cartridge type added
* last #include "zlib.h" found and fixed.

** released as 1.2.2

2001-12-31  Petr Stehlik  <pstehlik@sophics.cz>
* renamed cpu_m68k.s to cpu_m68k.asm because it's not in gas format
* renamed *.s files in falcon/ to *.asm (same as above)
* updated Makefile.in to run xgen on *.asm files only

2001-12-29  Petr Stehlik  <pstehlik@sophics.cz>
* joysticks (both real and keyboard) in SDL port fixed.
* configure now allows to --enable-CPUASS for m68k assembler CPU core.

2001-12-24  Jakub Bogusz <qboosh@pld.org.pl>
* memory corruption in input.c (joystick checking) fixed.

2001-12-17  Petr Stehlik  <pstehlik@sophics.cz>

* configure.in changed so it doesn'ta ask any questions by default
  Use --enable-FEATURE or --disable-FEATURE.
* configure.in updated for better Falcon support

2001-12-08  Krzysztof Nikiel  <knik@poczta.onet.pl>

* acconfig.h: unused symbol COMPILED_PALETTE removed
* win32/atari1.ico: new windows icon (actually an old one but modified)
* win32/atari.rc: new icon included

2001-12-07  Piotr Fusik  <fox@scene.pl>

* cpu.c: #include <stdlib.h> for exit()
* rtime.c: #include <string.h> for strcmp()

2001-12-04  Jacek Poplawski  <jpopl@interia.pl>

* log.c, log.h: fixed undefined Aflushlog
* atari_sdl.c: cleanups for readability

2001-12-04  Petr Stehlik  <pstehlik@sophics.cz>

* util/sethdr, util/act2html.c: added Nathan's sethdr perl script and Piotr's
  act2html C code
* SDL port now calls Aflushlog() before it exits
* fixed win32 compile and runtime problems (thanks to Nathan)

2001-12-03  Petr Stehlik  <pstehlik@sophics.cz>

* configure.in: updated to support the Atari Falcon port
* Falcon port' proprietary -DDMASOUND changed to general -DSOUND

2001-11-27  Krzysztof Nikiel  <knik@priv.onet.pl>

* colours.c: default palette changed to the real palette created by
  Zdenek Eisenhammer.
* colours.c: code to adjust palette properties improved and moved
  to separate function Palette_Format.

2001-11-26  Piotr Fusik  <fox@scene.pl>

* colours.c: #include <string.h> for strcmp()

2001-11-22  Krzysztof Nikiel  <knik@poczta.onet.pl>

* DOC/INSTALL: added autoconf instructions
* acconfig.h: added SVGALIB symbol

2001-11-18  Piotr Fusik  <fox@scene.pl>

* ui.c: fixed a bug: modification of string literals

2001-11-14  Vasyl Tsvirkunov <vasyl@pacbell.net>

* WinCE: Fixed a few keyboard issues
* Linear filter applied to screen image in portrait mode (looks much better)

2001-11-09  Piotr Fusik  <fox@scene.pl>

* pbi.c, pbi.h, Makefile.in: removed pbi module (it did nothing useful and
  was out of date)

2001-11-04  Piotr Fusik  <fox@scene.pl>

* input.h, input.c: added Trak-Ball emulation ("Missile Command")
  and blocked opposite joystick directions (good for "Mario Bros.")
* cartridge.h, cartridge.c, ui.c: right slot cartridge

2001-10-29  Piotr Fusik  <fox@scene.pl>

* monitor.c: "DLIST" didn't stopped on JVB if Display List had multiple of 15
  instructions
* cpu.c, gtia.h: removed i386 asm tricks - gcc 2.95.3 does it better :-)
* atari.h, gtia.c: changed implementation of WSYNC/VCOUNT timing
  (previously it assumed that the instruction accessing VCOUNT had 4 cycles)
* antic.c: corrected timing of DLISTL/H ("Spelunker" works)

2001-10-26  Piotr Fusik  <fox@scene.pl>

* atari_vga.c, configure.in: moved atari_vga.c from src to src/dos
* configure.bat, configure_dos.bat: renamed configure.bat to configure_dos.bat
  (in bash 2.04.7 "./configure" runs configure.bat instead of configure)
* atari.c, memory-d.c: made 130 XE state files compatible with previous
  versions
* ui.c: current system is selected by default in SelectSystem()
* input.h, antic.c, input.c: light gun emulation,
  "-mouse gun" is same as "-mouse pen", except that the button is inverted
* input.c: set default light pen/gun offsets to (42, 2) - good for light gun
  games; a bigger light pen/gun cursor

2001-10-16  Krzysztof Nikiel  <knik@poczta.onet.pl>

* ui_basic.c: better keyboard autorepeat rate
* configure.in: added AC_EXEEXT; removed A800_MAIN; used $target variable
* Makefile.in: improved dep target; added EXEEXT
* autogen.sh: new script to create 'configure'

2001-10-12  Piotr Fusik  <fox@scene.pl>

* cartridge.h, cartridge.c, ui.c: added 8 KB and 4 KB cartridges for 5200

2001-10-11  Piotr Fusik  <fox@scene.pl>

* atari_curses.c, ui_basic.c, ui.c: removed CURSES-specific code from ui.c,
  added curses_screen for UI

2001-10-11  Krzysztof Nikiel  <knik@poczta.onet.pl>

* ui_basic: added atari_sync() call in keyboard loop--keyboard is sampled
  at reasonable rate

2001-10-10  Piotr Fusik  <fox@scene.pl>

* atari_x11.c, atari_curses.c: compilable now
* configure.in, ui.c: corrected typos

2001-10-10  Krzysztof Nikiel  <knik@poczta.onet.pl>

* sound.c: improved output space calculation--can work much better
  with some drivers

2001-10-09  Piotr Fusik  <fox@scene.pl>

* ui.c: OSS 'M019' -> 'M091'

2001-10-08  Piotr Fusik  <fox@scene.pl>

* input.c: removed CVS keywords
* ui.c: corrected stack bug (thanks Vasyl) and renamed some cartridge types

2001-10-07  Piotr Fusik  <fox@scene.pl>

* input.c: smoother mouse pointer movement in Amiga/ST/joy modes
* atari_basic.c: removed Atari_POT (unused)
* pokey.c: fixed SEROUT (Sparta DOS X runs)

2001-10-05  Piotr Fusik  <fox@scene.pl>

* atari.c, cartridge.h, cartridge.c, ui.c: added Bounty Bob Strikes Back
  cartridge for 800/XL/XE (thanks Jindroush)
* atari.c: H: didn't worked until a patch was toggled

2001-10-03  Piotr Fusik  <fox@scene.pl>

* input.h, input.c: finished mouse code
* pokey.c: added INPUT_Scanline() call (to emulate Amiga and ST mice)
* rt-config.c: fixed default TV mode in RtConfigUpdate
* cpu.c: killed some warnings, AtariEscape -> Atari800_RunEsc
* atari.h, atari.c, devices.c, devices.h, memory-d.c, binload.c: rewritten
  escape codes handling
* devices.c: corrected Device_isvalid (isalnum((char) 0x9b) == 1 !)
* binload.c: killed a warning, used dGetWord/dPutWord
* diskled.h, diskled.c, sio.c, atari.c, atari_vga.c, platform.h:
  SET_LED and Atari_Set_LED are no longer used, Update_LED -> LED_Frame
* atari.h, atari.c: added screen_visible_* variables
* input.c, atari_vga.c, platform.h: removed Atari_POT: special handling
  of 5200 joysticks is in input.c
* Makefile.in: updated

2001-10-03  Krzysztof Nikiel  <knik@poczta.onet.pl>

* win32/atari_win32.c, atari_svgalib.c: keyboard interface updated
* win32/main.c: added mouse input

2001-10-01  Piotr Fusik  <fox@scene.pl>

* dos/vga_asm.s: corrected a bug in make_darker and commented whole routine
  out (it was used in ALLEGRO version only).
* ui.h, devices.c, cpu.c, atari.c: #include "ui.h" for CRASH_MENU externs
* memory-d.h: added a few useful macros (dGetWord, etc.)
* sio.c, cpu.c, memory-d.c, atari.c, antic.c: updated for new macros in
  memory-d.h
* cartridge.h, cartridge.c, ui.c: added new cartridge type: Atrax 128 KB
  (thanks Jindroush)
* antic.h, antic.c, ui.c: renamed artif_init to ANTIC_UpdateArtifacting
* ui.c: CURSES code cleanup (spaces, memory[], goto)

2001-09-27  Piotr Fusik  <fox@scene.pl>

* pia.c, pia.h: Atari_PORT -> PORT_input
* pokey.c, pokey.h: Atari_POT -> POT_input
* input.h: added INPUT_Initialise and a few mouse variables
* input.c: added INPUT_Initialise, PORT_input, POT_input
* atari_basic.c: removed Atari_CONSOL and Atari_PEN (not used anymore)
* cpu.c: fixed nasty bug with extern int wsync_halt
  - there's UBYTE wsync_halt in antic.c (oooooppss!)
* cpu_m68k.s: fixed wsync_halt bug, bounty_bob1/2 -> CART_BountyBob1/2,
  SupertCart_GetByte/PutByte -> CART_GetByte/PutByte
* input.h: mouse_speed, INPUT_CenterMousePointer, INPUT_DrawMousePointer
* input.c: emulation of Paddles, Atari Touch Tablet, Koala Pad
  and Light Pen/Light Gun
* atari.c: called INPUT_Initialise and INPUT_DrawMousePointer
* atari_vga.c: updated mouse code
* Makefile.in: updated

2001-09-26  Piotr Fusik  <fox@scene.pl>

* input.c, input.h: added mouse_mode, mouse_port, 5200 key codes
* antic.h, antic.c, platforma.h, atari_vga.c: light_pen_enabled, Atari_PEN ->
  mouse_mode==MOUSE_PEN, PENH_input, PENV_input (direct mouse support
  for light pen emulation)

2001-09-22  Piotr Fusik  <fox@scene.pl>

* input.h, input.c: added key_consol, joy_autofire, AKEY_SHFT etc.
* input.c: fixed key_break and key_code
* atari.h: declared nframes and deltatime, AKEY_SHFT etc. moved to input.h
* gtia.c, platform.h, atari_vga.c: Atari_CONSOL -> key_consol,
  TRIG_auto -> joy_autofire

2001-09-21  Piotr Fusik  <fox@scene.pl>

* antic.c: optimized character modes
* devices.c: removed unused variable
* atari.h, atari.c: Atari800_Frame(): new function that groups emulation
  of one Atari frame. The functions for individual modules will be called
  ANTIC_Frame(), GTIA_Frame(), etc.
* input.h, input.c: new module, for keyboard/joystick/mouse
* pokey.h: declared SKSTAT (for input)
* atari_vga.c, ui.c: included input.h
* atari.h: joystick positions and Atari key codes moved to input.h
* atari.c: part of keyboard handling moved to INPUT_Frame()
* Makefile.in: updated for the input module
* antic.h, antic.c, ataripcx.c, ui.c: ANTIC_RunDisplayList -> ANTIC_Frame
* gtia.h, gtia.c: GTIA_Triggers -> GTIA_Frame
* atari.h: removed draw_display, added Atari800_Initialise
* atari.c: main() is now in platform-dependent code, should call
  Atari800_Initialise and Atari800_Frame
* input.c, input.h, pokey.c, atari_vga.c: SHIFT_KEY -> key_shift (consistent
  naming convention)
* pokey.c, atari_vga.c: removed KEYPRESSED (not needed, since INPUT_Frame()
  can check if key_code!=AKEY_NONE)
* atari_basic.c, atari_vga.c: added main()

2001-09-20  Piotr Fusik  <fox@scene.pl>

* gtia.c: optimized players in new_pm_scanline

2001-09-19  Piotr Fusik  <fox@scene.pl>

* pokey.c: corrected RANDOM

2001-09-17  Piotr Fusik  <fox@scene.pl>

* antic.c: optimized: memcpy in ANTIC_Load
* memory-d.c, memory-d.h, atari.c: Initialise_Atari... functions moved
  to atari.c (they don't need to be memory-d/-p specific, it should simplify
  finishing PAGED_MEM code)
* atari.c, atari.h, atari_vga.c, cartridge.c, gtia.c, memory-d.c, pia.c,
  rt-config.c, rt-config.h, statesav.c, ui.c:
  machine, mach_xlxe, Ram256, os, default_system -> machine_type, ram_size
  (removed lots of confusing variables, now it's easier to add new machines
  - 16,192,1088,... KB of RAM)
* cartridge.c: killed a warning
* rt-config.c, rt-config.c, ui.c, memory-d.c, atari.c:
  enable_c000_ram -> ram_size = 52
* memory-d.c: malloc/free atarixe_memory (don't waste 256 KB if not
  in XE mode)
* atari.c: shortened state file of 130 XE

2001-09-16  Piotr Fusik  <fox@scene.pl>

* atari.c, rt-config.c, rt-config.h: removed default_tv_mode (not needed,
  since there's tv_mode)

2001-09-09  Piotr Fusik  <fox@scene.pl>

* pia.h: declared atari_basic and selftest_enabled
* rt-config.h, rt-config.c, atari.c, ui.c: hold_option -> disable_basic
* memory-d.h, memory-d.c, cartridge.c:o "-basic" and "-nobasic" work
  for Atari 800 (Atari BASIC is attached as a cartridge in Atari 800)

2001-09-08  Krzysztof Nikiel  <knik@poczta.onet.pl>

* compfile.c: unused definitions and inclusions removed
* ui.c, rt-config.h, rt-config.c: used FILENAME_MAX instead of
  MAX_FILENAME_LEN
* sio.c, sio.h: used FILENAME_MAX instead of FILENAME_LEN

2001-09-06  Piotr Fusik  <fox@scene.pl>

* atari.h: MENU_PATCHES -> MENU_SETTINGS

2001-09-04  Piotr Fusik  <fox@scene.pl>

* pokey.c: implemented SKRES and bit 5 of SKSTAT
* cartridge.c: CART_Remove works in 5200 mode
* ui.c: hold_option, enable_c000_ram and rtime_enabled available in menu

2001-09-03  Piotr Fusik  <fox@scene.pl>

* pokey.c: call SIO_GetByte() when triggering IRQ, not when reading SERIN
  ("Timeless Announcement" loads now)
* sio.c: disk drive answers 'E' to an unknown command.

2001-08-29  Piotr Fusik  <fox@scene.pl>

* cassette.h, cassette.c: using FILENAME_MAX from stdio.h

2001-08-27  Piotr Fusik  <fox@scene.pl>

* pokey.c: RANDOM is 0xff if (SKCTLS&0x03)==0 (for stereo detection in
  "Sheol")

2001-08-27  Krzysztof Nikiel  <knik@poczta.onet.pl>

* acconfig.h, config.h.in: safer 'win32' definition
* win32/main.c: used _endthread() call without parameter

2001-08-24  Piotr Fusik  <fox@scene.pl>

* pokey.h: declared stereo_enabled (for monitor.c)
* pokey.c: initialize KBCODE to 0xff - for a stereo detection routine

2001-08-19  Krzysztof Nikiel  <knik@poczta.onet.pl>

* DOC/INSTALL: windows instructions

2001-08-16  Piotr Fusik  <fox@scene.pl>

* atari.c: selecting cartridge type didn't worked in 5200 mode
* memory-d.c: deleted CART_Remove() in Initialise_Atari*, so auto-switching
  to 5200 mode when inserting a 5200 cartridge works
* cartridge.c: fix for Bounty Bob 5200 cartridge (thanks Jindroush)

2001-08-06  Piotr Fusik  <fox@scene.pl>

* colours.c: -help bug fix
* cassette.h, gtia.h, gtia.c, atari.c: hold_start support
  (emulator presses Start and Space to boot the tape)
* cassette.c: CAS format support
* Makefile.in: added cassette.[ch]

2001-08-03  Piotr Fusik  <fox@scene.pl>

* cassette.h, cassette.c: new module, for cassette recorder emulation
* sio.h: declared SIO_ChkSum (for cassette.c)
* atari.c, sio.c: cassette support

2001-07-25  Piotr Fusik  <fox@scene.pl>

* sio.h, compfile.c, atari.c, sio.c: added SIO_Exit(), code clean ups
* sio.c: Format Disk rewritten. Now it can resize both ATR and XFD images.
  The ATR header is being updated. Double density formatting works.

2001-07-24  Piotr Fusik  <fox@scene.pl>

* antic.c: speeded up Vasyl's code

2001-07-23  Piotr Fusik  <fox@scene.pl>

* sio.c: corrected and added checks if drive number is in range 1-8

2001-07-21  Piotr Fusik  <fox@scene.pl>

* sio.c: made double density ATR images compatible with SIO2PC

2001-07-20  Piotr Fusik  <fox@scene.pl>

* monitor.c: "C 600 ABCD" does the same as "C 600 CD AB".
  "DLIST" - 1 KB boundary respected. "POKEY" command.
  "S" without parameters repeats last search.
  Corrected Petr's mistake in rev.1.4.
* pia.c, pia.h: renamed atarixl_os to atari_os (this array may be used
  also for storing 800 and 5200 OSes)
* rt-config.h, rt-config.c, atari.c, atari.h, memory-d.c, memory.d.h:
  removed enable_rom_patches, added: enable_h_patch, enable_p_patch and
  Atari800_UpdatePatches(). SIO, H: and P: patches are now independent
  and can be toggled at run-time (original OS is saved in atari_os).
  Removed SetSIOEsc() and RestoreSIO().
* atari.h, ui.c: added "Atari OS patches" menu item
* cpu.c, devices.c, atari.h: removed ESC_BREAK (it wasn't really an escape
  code, it was used for entering the monitor - the monitor can be called
  directly)
* devices.c: replaced K_Device with Device_KHREAD, replaced E_Device with
  Device_EHOPEN, Device_EHREAD and Device_EHWRITE (now K: and E: handlers
  are implemented in the same way as H: and P:)
* rtime.h, rtime.c: new module, created from R-Time 8 emulation routines in
  supercart
* cartridge.h, cartridge.c: new module, for inserting cartridges (previously
  in memory-d) and bank-switching (previously in memory-d and supercart)
* monitor.c: not displaying rom_inserted in "PIA" command (because the new
  cartridge types can be disabled by software)
* atari.h: added declarations of mach_xlxe and Ram256,
  removed cartridge types and Insert/Remove functions for cartridges
* rt-config.c: removed #define TRUE/FALSE and extern int Ram256 (it's in
  atari.h)
* memory-d.h, memory-d.c: rewritten to support the new cartridge module
* pia.c: Ram256 moved to atari.c (it's not related with PIA)
* gtia.h: declared TRIG and TRIG_latch (accessed by memory-d)
* pia.c, gtia.c: cartA0BF_enabled is used instead of rom_inserted
* ui.h: declared SelectCartType(), removed mach_xlxe and Ram256
  (which are declared in atari.h)
* atari.c: support for new rtime and cartridge modules
* ui.c: inserting, removing and converting of new cartridge types
* Makefile.in, common.mak: added cartridge and rtime, removed supercart
* supercart.c, supercart.h: removed - routines moved to new modules cartridge
  and rtime

2001-07-19  Piotr Fusik  <fox@scene.pl>

* binload.c: 0x31 stored at 0x300 ("Studio Dream" loads now)
* supercart.c: added "byte &= 0x0f" to prevent out of bounds accesses
  to regset[]
* pokey.c: SKSTAT variable renamed to SKCTLS to avoid confusions
  (it's the write-only, not the read-only Pokey register)
* devices.c: replaced "dGetByte(0x2e)" with "regX" in H: handler routines
  (fixes problems with Atari BASIC's GET/PUT/INPUT/PRINT)
* cpu.c: on reset, the I flag is set (now reset works if stuck in interrupts)
* pia.c: & 0x3f on read PACTL and PBCTL (bits 6 and 7 are read-only in real
  PIA)
* antic.c: described cycle-exact Antic timing for a few modes
  (not implemented)
* devices.c: added open mode 9 (append) for H: device
* pokey.c: potentiometers emulation improved: POTGO and ALLPOT registers
  and bit 2 of SKCTLS implemented, "Tree Surgeon" no longer hangs
* pokey.c, pokey.h, pokeysnd.c, pokeysnd.h: moved a few definitions from
  pokeysnd to pokey (the goal is not to duplicate the variables of same
  meaning in pokey and pokeysnd, e.g. AUDC/AUDF/AUDCTL)
* pokey.c: blocked POTs, SERIN, SEROUT, KBCODE, IRQ, SKSTAT, SKCTLS
  in the second Pokey chip, second Pokey unaccesible until stereo_enabled set
  (helps some stereo detection routines)
* pokey.c, pokey.h, pokeysnd.c: replaced bit17[] with poly9_lookup[] and
  poly17_lookup[]. bit17[] was initialized with rand(), while poly9/17_lookups
  use the original POKEY algorithms. Moreover, poly9/17_lookups are smaller,
  which saves ca. 100 KB of memory.
* atari.h, pokey.h, antic.c, pokey.c: true RANDOM emulation (both 9- and
  17-bit poly) ! Not using rand() anymore. POKEY_Frame() and cpu_clock are
  needed for it. Try the "Bank Bang!" game.
* antic.c, gtia.c: the background color can be changed inside a scanline.
  Currently implemented only for blank lines without PMG.
  Try the "Partyland" part of the "Bitter Reality" demo.
  The feature can be disabled by defining NO_CYCLE_EXACT.
* pokey.c: STIMER fixed (speech in "Mirax Force" is better, but still
  not perfect)
* cpu.c: slight optimization of ROL and ROR
* cpu.c: Read-Modify-Write (RMW) instructions (ASL, INC, etc.) store
  the unmodified value of $D01A before they store the modified value.
  Now you can see the white dots made with INC $D01A.
* ui.h: removed declaration of atarixl_os (why was it declared here?)
