** 2.0.3 released on 2007-07-11

2007-04-23  Piotr Fusik  <fox@scene.pl>
* win32/msc/Makefile: fixed a problem that appeared when I switched to another
  version of NMAKE ("fatal error U1100: macro '$@' is illegal in the context
  of batch rule '.c.obj'")


2007-04-23  Paulo Lopes  <paulo.lopes@ist.utl.pt>
* win32/atari_win32.c: new command-line option "-win32keys" for keyboard
  layouts different from US (the emulator relies on Win32 API to do scan code
  translations)


2006-12-07  Paulo Lopes  <paulo.lopes@ist.utl.pt>
* win32/main.c, win32/screen_win32.[ch]: an option to run the emulator
  in a window ("-windowed" on the command line)


2006-11-05  Piotr Fusik  <fox@scene.pl>
* DOC/PORTING: an introduction to writing platform-specific part of Atari800


2006-10-31  Kostas Nakos  <knakos@gmail.com>
* util.c: Make sure user does not updir from the root in WinCE


2006-10-30  Kostas Nakos  <knakos@gmail.com>
* wince/port/*, ui_basic.c, DOC/INSTALL.wince: added support for QVGA landscape
  smartphones, added the virtual keyboard (kb_ui) and updated documentation.


2006-09-04  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt: added 128 KB SpartaDOS X cartridge type,
  by the way: shortened the cartridge code and replaced letters with numbers
  for bank indexing in the documentation


2006-07-23  Piotr Fusik  <fox@scene.pl>
* input.[ch], atari_x11.c, win32/main.c: middle button support
  for ST and Amiga mice


2006-07-21  Piotr Fusik  <fox@scene.pl>
* antic.c: corrected PMG in bizarre ANTIC/GTIA modes


2006-07-01  Mark Grebe  <markgrebe@yahoo.com>
* antic.[ch], ui.c: new style of artifacting


2006-06-29  Piotr Fusik  <fox@scene.pl>
* win32/msc/Makefile, win32/msc/config.h, DOC/INSTALL:
  upgraded VC++ from 6.0 to 2005


2006-05-01  Piotr Fusik  <fox@scene.pl>
* util/act2html.*: replaced my old C program with a Perl script;
  the Perl script keeps hues from different palettes together
  which I think is better for palette comparisons

* util/colors.asx, util/colors.xex: Atari program that displays all 256 colors

* util/crlf.*, util/keyboard.txt, util/usage2html.pl: removed

* util/readme.txt: updated

* act/gray.act: 0x00,0x11,0x22,... instead of 0x00,0x10,0x20,...


2006-04-24  Piotr Fusik  <fox@scene.pl>
* util/sethdr.pl, util/sethdr.txt: removed; the script hasn't been updated
  for years (so it supported only half of current cartridge types),
  wasn't portable, etc. "Create Cartridge from ROM image" in the emulator
  basically does the job of the removed script.

* util/makebb.bat: removed; anyone who is serious about making a ROM image
  of "Bounty Bob Strikes Back 5200" by concatenating 3 files can read
  DOC/cart.txt


** 2.0.2 released on 2006-04-08

2006-04-08  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: map ATARI key to SDL_BACKQUOTE key as well (similarly to DOS
  port) since LSUPER key (the WINDOW key) is unusable in MS Windows (it
  opens up the Start menu).

* config.{guess,sub}: updated to version from 2006-02-23

* debian/*: update for new release. Fixes bugs in Debian BTS (#346876, #288543)

* atari800.{h,man},configure.ac,README*,atari800.spec: update for 2.0.2 release


2006-04-06  Perry McFarlane  <perry_m@fastmail.fm>
* antic.c: removed IR = 0 and anticmode = 0. Added a check to ignore JVB
  in the jump instruction instead.


2006-03-29  Perry McFarlane  <perry_m@fastmail.fm>
* atari_sdl.c, atari_ntsc.c: added command line options, help and rearranged
  code a bit in the NTSC emulator.
* DOC/USAGE updated for the NTSC emulator.
* DOC/BUGS added Satan's Hollow and Sirius games.
* TODO updated to add NTSC emulator todos and a large number of other ideas.
* DOC/CREDITS added Shay Green as author the of NTSC emulator


2006-03-19  Piotr Fusik  <fox@scene.pl>
* compfile.c: fixed DCM image handling - support 0x45 "End Of Pass" code
  in an empty sector block starting at any sector (usually 0x0045)


2006-03-10  Perry McFarlane  <perry_m@fastmail.fm>
* atari_sdl.c, atari_ntsc.c: Blargg's NTSC composite video emulator based on
  NewRisingSun's algorithm. SDL port 640x480x16 only. Use -ntscemu.


2006-02-03  Piotr Fusik  <fox@scene.pl>
* antic.c: a bug in do_border_gtia10 caused a crash on machines that don't
  support unaligned words (problem reported by Mark Watson), on other machines
  sprites on the right border in GTIA 10 modes were incorrectly shifted;
  a pointer cast in DO_BORDER_1 replaced with IS_ZERO_ULONG, just in case


2006-01-31  Piotr Fusik  <fox@scene.pl>
* win32/screen_win32.c: made DDERR_UNSUPPORTED user-friendly ;-)

* atari.h, input.c, statesav.c, ui.c, ui.h, ui_basic.c, dc/atari_dc.c,
  dc/atari800.cfg, dc/config.h, dc/dc_chdir.c, dc/icon.h, dc/Makefile.dc,
  dc/version.h, dc/vmu.c, dc/vmu.h, DOC/CHANGES.dc, DOC/README.dc:
  integrated Christian Groessler's SEGA Dreamcast port


2006-01-30  Perry McFarlane  <perry_m@fastmail.fm>
* antic.c: fixes for Spider City and Fast Eddie
  Don't display usual graphics if DMACTL width changed from 0 past a
  certain cycle.  Also don't continue to steal cycles. Bug made Fast Eddie
  bounce up and down one scan line in the demo mode and caused garbage lines
  in Spider City.

* antic.c: fix update_scanline_* to adjust for HSCROL only when IR&0x10 is
  true.  I don't know if it caused any problems but it was wrong.

* antic.c: fix for Final Orbit. Set IR = 0 after JVB instruction.  Bug made the
  screen shake badly.


2006-01-26  Piotr Fusik  <fox@scene.pl>
* ui_basic.c: directory that has been left (via Backspace or "[..]")
  is highlighted in the parent directory; display an error message
  when cannot enter a directory


2006-01-14  Piotr Fusik  <fox@scene.pl>
* monitor.c: "D" command displayed FFFE and FFFF instruction addresses
  as FFFFFFFE and FFFFFFFF respectively


2006-01-11  Troy Ayers  <holiday42@gmail.com>
* atari_ps2.c: Added routines for sound_pauses and sound resume for the PS2


2006-01-09  Piotr Fusik  <fox@scene.pl>
* pokeysnd.c: some fixes for stereo RF pokeysnd, essential for ASAP


2006-01-07  Piotr Fusik  <fox@scene.pl>
* atari.[ch], memory.c, ui.c: 192 KB RAM


2006-01-06  Piotr Fusik  <fox@scene.pl>
* configure.ac: small fix for sound on PS2

* DOC/BUGS: 5200 Joust sets all colors to black on PAL machines
  (not Atari800's bug)


** 2.0.1 released on 2006-01-02

2006-01-02  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: keysym.unicode is not defined for KEYUP event (reported
  by Patrice Mandin, the Atari libSDL port author)

* various doc files: update for 2.0.1 bugfix release


2006-01-02  Piotr Fusik  <fox@scene.pl>
* devices.c: H: device defaults to read-only

* atari_sdl.c: keys used for joystick emulation shouldn't be ignored in UI
  (reported by Wiktor Grebla)

* ui.c: fixed a bug in per-file ROM configuration in UI (reported
  by Piotr Skamruk)

* ui.[ch]: MENU_PLACEHOLDER is no longer necessary thanks to the new
  FindMenuItem()


** 2.0.0 released on 2005-12-31
*** started second decade of Atari800 development!

2005-12-31  Petr Stehlik  <pstehlik@sophics.cz>
* atari_falcon.c: 'fVDI' cookie almost surely indicates that we are running
  on a graphics card with no bitplanes support.
  <falcon.h> header file is in mint subfolder in newer mintlibs.


2005-12-30  Kostas Nakos <knakos@phys.uoa.gr>
* wince/*: code refinements

* DOC/INSTALL.wince: updated


2005-12-30  Piotr Fusik  <fox@scene.pl>
* cpu.[ch], mzpokeysnd.c, pokey.h, pokeysnd.c, remez.c: added conditional code
  for an external project derived from Atari800, see http://asap.sf.net


2005-12-29  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: keyboard joysticks:
  - removed secondary trigger key
  - added functions that list currently assigned keyboard joystick keys (for
    use in the UI to show user how the joystick is mapped)
  - SDL_X_TRIG renamed to SDL_JOY_X_TRIGGER (old config name still supported)
  - SDL_JOY_X_ENABLED added to config file (so you can enable/disable
    the keyboard joysticks and save that for future)

* ui.c: SDL keyboard joysticks: show how the joystick keys are mapped

* config.{guess, sub}: updated to versions from August 2005

* atari800.man: added -Hpath <path>

* DOC/FAQ: listed my solutions for keyboard joysticks and sound problems
  under SDL with GNOME ESD.

* atari800.spec, README.1ST, DOC/{README, NEWS}: updated for new release


2005-12-29  Piotr Fusik  <fox@scene.pl>
* ui_basic.c: help line for the directory selector


2005-12-28  Petr Stehlik  <pstehlik@sophics.cz>
* sound_oss.c: handles situations when Pokey generated channels don't match
  the output channels - for example when stereo Pokey is to play on mono only
  card, or vice-versa. Also stereo Pokey compiled in but disabled at runtime
  now plays from both channels (not just the left one).


2005-12-27  Piotr Fusik  <fox@scene.pl>
* DOC/INSTALL.amiga: removed (completely obsolete)

* DOC/TODO: reorganized and added my ideas

* pokey.c: made initialization of poly17_lookup[] about 10 times faster


2005-12-05  Piotr Fusik  <fox@scene.pl>
* atari_ps2.c: sound support for the PS2


2005-11-30  Piotr Skamruk  <jellonek@knip.pol.lublin.pl>
* ui.c: options for enabling/disabling SDL keyboard joysticks


2005-11-26  Piotr Fusik  <fox@scene.pl>
* atari.c: fixed Atari_time() on the PS2

* atari.c: applied patch for *argc==0 (Chris)

* ui_basic.c: minor fix in FileSelector()


2005-11-24  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: keyboard joysticks don't pause games anymore. However, a
  runtime switch between keyboard joysticks and normal keyboard is needed.
  DOS/VGA uses <F7>. Will SDL use that or something else? Also some sort
  of visual indication (similar to disk drives lights) is needed otherwise
  users will get confused when half of their keyboard doesn't respond.


2005-11-19  Piotr Fusik  <fox@scene.pl>
* configure.ac, sound_oss.c, sound_unix.c: new OSS sound handling:
  - renamed sound_unix.c to sound_oss.c
  - added "-lossaudio" (necessary on NetBSD)
  - removed some advanced tricks (including "-snddelay" option),
    now writing samples for one Atari frame at once
  - implemented Sound_Pause() using SNDCTL_DSP_POST

* monitor.c: the output of "GTIA" command is now 7 lines instead of 5,
  but is much more readable (sprite registers are aligned)


2005-11-14  Piotr Fusik  <fox@scene.pl>
* configure.ac: R: device disabled by default (use "--enable-riodevice"
  at your own risk)

* atari_ps2.c: fixed timer_interrupt_id, but the timer code probably
  still won't work, so I wrapped it in USE_TIMERS

* ui_basic.c: added "[mc0:]" to file selector on PS2;
  use just one Win32 API call GetLogicalDrives() for all drive letters


2005-11-11  Piotr Fusik  <fox@scene.pl>
* configure.ac, amiga/config.h, win32/msc/config.h, wince/port/config.h,
  antic.c, cpu.c, memory.h, pokeysnd.c:
  UNALIGNED_LONG_OK -> WORDS_UNALIGNED_OK

* atari.[ch], antic.c, memory.h: STAT_UNALIGNED_WORDS

* binload.c, devices.c: dGetWord -> dGetWordAligned,
  dPutWord -> dPutWordAligned

* configure.ac: WORDS_UNALIGNED_OK now bases on the built-in
  CPU architecture database and can be overridden
  with "--enable-unalignedwords" / "--disable-unalignedwords"

* atari.c, atari_ps2.c: implemented Atari_time() and Atari_sleep() on PS2


2005-11-08  Piotr Fusik  <fox@scene.pl>
* atari_ps2.c, devices.c, ui_basic.c: support for directory listings on PS2
  ("mc0:" only)


2005-11-04  Piotr Fusik  <fox@scene.pl>
* monitor.c: pacified warnings on 64-bit CPUs


2005-11-03  Piotr Fusik  <fox@scene.pl>
* ui.c: "Uncompress disk image": there was a random message when the user
  cancelled output file selection

* sio.c: removed superfluous SIO_Dismount() - SIO_Mount() calls it


2005-11-02  Piotr Fusik  <fox@scene.pl>
* atari.c: RESET key in 400/800 does not reset chips, but only generates
  RNMI interrupt

* gtia.c: pacified warnings in no-NEW_CYCLE_EXACT build

* devices.c: pacified MSVCE warning in WORDS_BIGENDIAN build

* ui_basic.c: file selector shows empty directories on WinCE

* devices.c: H: directory listing with no matching entry now works on WinCE

* devices.[ch], ui.[ch]: "Advanced H: options"

* devices.c: fixed H: open mode 12 - now creates files that didn't exist;
  added H: open mode 13 - append and read (most Atari DOSes don't support it,
  but Sparta does)

* devices.c: H: MyDOS Load Executable command now works on open files
  (this is how MyDOS menu uses it)

* configure.ac, amiga/config.h, win32/msc/config.h, util.[ch], devices.c,
  sio.c: improved handling of temporary files:
  - temporary files with H: directory listing are deleted on WinCE
  - if available, tmpfile() is used for DCM and GZ disk images
    (no need to store names of temporary files)

* sio.c: fixed Aprint("%SIO... inside #ifdef DEBUG

* sio.c: drive status command ('S') now reports the density configured
  via PERCOM ('O') - MyDOS menu can reformat a disk with different sector size

* compfile.[ch]: rewritten from scratch. New DCM code is partially inspired
  by Ernest Schreurs' DCM2ATR utility:
  - DCMs that aren't Single/Double/Enhanced Density are now supported
    (example: double-sided disks)
  - DCM sector coding type 0x42 is now supported
  - DCM code is short, fast and clear (as opposed to old DCM code and DCM2ATR)

* ui.c: "Uncompress Disk Image" converts XFD.GZ to XFD, ATR.GZ to ATR,
  DCM to ATR

* win32/main.c: replaced WinMain() with main() so that MSVC-compiled version
  is a console application

* atari.[ch], atari_curses.c, atari_sdl.c, atari_svgalib.c,
  colours.c, compfile.c, devices.c, log.c, memory.c, monitor.c, mzpokeysnd.c,
  pia.c, platform.h, pokeysnd.c, sio.c, sound_unix.c, statesav.c, ui.c,
  ui_basic.c, dos/dos_ints.h, dos/dos_sb.[ch], win32/atari_win32.c,
  win32/joystick.c, win32/keyboard.c, win32/main.c, win32/screen_win32.c,
  win32/sound.c: removed CVS log from file contents


2005-10-29  Kostas Nakos  <knakos@gmail.com>
* atari.c: implementation of alternate host syncing scheme
  With USE_CLOCK undefined, normal operation requires syncing (sleeping) for
  each frame, even when refresh rate is > 1. By defining the
  ALTERNATE_SYNC_WITH_HOST symbol results in calculating skipped and the drawn
  frames, then sleeping once for a longer period. This scheme seems to yield
  better results for slow devices.


2005-10-25  Piotr Fusik  <fox@scene.pl>
* sio.c: compressed disk images are now open read-only.
  Version 1.3.6 could open them in read-write mode, but the compressed
  images were never modified, so changes were lost. It was commented
  "this is a fake but some games need it", but, since read-only ATRs
  (e.g. on a CD-ROM) cannot be open in read-write mode, why compressed
  images should be?

* antic.c, monitor.c: "VCOUNT" and "ypos" are now zero in the monitor
  invoked outside ANTIC_Frame() (previously 0x9c and 312 respectively,
  which doesn't make sense)

* atari.[ch], devices.c, ui.c, util.h: Atari800 tries to guess ROM paths
  that are not configured (no configuration file or no entries for ROM paths).
  It checks in the current directory, "/usr/share/atari800" (only on Unix
  and Linux), directory with the Atari800 binary and its "rom" and "ROM"
  subdirectories. See source code of Atari800_FindROMImages() in atari.c
  for the filenames that are checked. Note that only the presence of files
  is checked here, not their contents. This is far from perfect, but probably
  better than hard-coded default filenames (in the current directory)
  as in Atari800 1.3.6 and earlier.


2005-10-23  Piotr Fusik  <fox@scene.pl>
* ui_basic.c: silenced a warning

* devices.c, hdevtest.lst: made H: functions 0x2f and 0x30
  SpartaDOS-compatible

* devices.c, ui_basic.c: Win32 implementation of directory listing
  no longer fails when no file matches the mask

* devices.c: Win32 implementation of long directory listing
  reports local file times rather than UTC


2005-10-22  Piotr Fusik  <fox@scene.pl>
* monitor.c: #include "pokeysnd.h" for stereo_sound (previously
  in rt-config.h)

* dos/atari_vga.c: didn't compile after removing Atari_DisplayScreen's
  argument

* atari_x11.c: XVIEW didn't compile after introducing atari_files_dir

* atari.[ch], ui.c: I forgot about configuration of tv_mode, now it's
  in "Select System"

* util.[ch], devices.c, ui_basic.c: Util_chrieq()

* ui.[ch], ui_basic.c, wince/port/ui_wince.c, wince/port/main.c:
  - display error message when SIO_Mount() fails
  - introduced MENU_* macros to hide tMenuItem structure layout
    in menu definitions
  - removed tMenuItem.sig (used by wince_ui_driver only)
  - simplified tMenuItem.flags values
  - replaced tUIDriver.fAboutBox with more general tUIDriver.fInfoScreen
  - added "tooltips" in Disk Management
  - combined "H: device" with "Use H: devices in Read Only mode"
  - added "Configure Directories" for configuration of atari_files_dir[]
    and saved_files_dir[] (thanks Petr for idea)
  - tUIDriver.fSelect now supports "dragging" (for reordering
    atari_files_dir[] and saved_files_dir[])
  - FileSelector's scrolling is less tricky and more reliable,
    as a side effect Left and Right arrows can be used to jump to first
    and last menu item respectively
  - you can quickly move in menus and file selector by pressing first
    letter of an item
  - fixed some problems with Alt+letter shortcuts
  - Alt+O no longer displays a blue line at bottom of the screen
  - moved WinCE-specific UI menu items to ui.c; only AboutPocketAtari()
    left in ui_wince.c; wince_ui_driver is history, which is good, because
    UI Driver is meant for View/Controller, not Model of User Interface;
    Kostas should review my changes, naturally
  - some naming changes to follow Atari800 convention

* atari_svgalib.c, ui_basic.c: improved SVGA_SPEEDUP:
  - now draws 1/refresh_rate part of screen every frame instead
    of every refresh_rate frames;
  - protected against problems when changing refresh_rate from UI
  - should work correctly with refresh_rate not being a divisor of 240
  - removed special handling from ui_basic.c

* atari.h, configure.ac: version 1.4.0


2005-10-19  Piotr Fusik  <fox@scene.pl>
* amiga/amiga.c: Atari_LoadAnyFile() additionally supports DCM, BAS, LST,
  CART, ROM, CAS, BOOT_TAPE

* ui.c: disks mounted as read-only now marked with '*' in Disk Management

* sio.c: initialize sio_filename[] with "Off" to match drive_status[]
  initialized with Off; simplified code by removing istmpfile[]

* amiga/amiga.c, atari_curses.c, atari_falcon.c, atari_ps2.c, atari_sdl.c,
  atari_svgalib.c, atari_vga.c, win32/atari_win32.c, wince/port/atari_wince.c,
  atari_x11.c, win32/main.c, platform.h, ui_basic.c:
  removed Atari_DisplayScreen's argument: use atari_screen directly

* util.c: Util_splitpath() and Util_catpath() recognize slash in addition
  to backslash

* rt-config.[ch], ui.c, ui_basic.c, atari_x11.c: DISK_DIR, ROM_DIR, EXE_DIR
  and STATE_DIR configuration options replaced with ATARI_FILES_DIR
  and SAVED_FILES_DIR. See discussion on the mailing list (9-11 Sep 2005).

* ui.[ch], ui_basic.c, wince/port/ui_wince.c: improved file selection:
  - file selector's title is the path of the listed directory
  - sort directories that start with a dot
  - file selector starts on the previously selected file
  - Backspace in the file selector goes to the parent directory
  - filenames of saved files are no longer limited to 32 characters
  - directory of a saved file appears in the edit box
  - Tab in the edit box invokes directory browser
  - added directory selection

* ui.[ch], ui_basic.c, wince/port/ui_wince.c:
  - removed box around screen title; screen title now always takes one line
    and is shortened if necessary
  - improved refresh_rate selection
  - added "Controller Configuration"
  - restored "Save Interlaced Screenshot" in the main menu
  - "Atari Settings" -> "Emulator Configuration": added H: paths
    and read-only, print command and ROM settings;
    the easiest way to configure ROMs is "Find ROM images in a directory"
    which looks for common names of ROM images (e.g. atarixl.rom)
  - improved disabling of function keys and Alt+letter in User Interface
    on WinCE (now using MENU_ACCEL() macro); applied to PlayStation 2, too
  - changed items[] indexing to pointer access in BasicUISelect();
    this is not a matter of optimization, since a smart compiler should
    generate same code for both - I'm 99% sure there's a bug in MSVC 6
    that caused the disabled R: menu item to appear on screen
  - some code simplifications

* devices.[ch], rt-config.[ch]:
  RtIsPrintCommandSafe() -> Device_SetPrintCommand()

* atari.c, prompts.[ch], rt-config.[ch], Makefile.in, amiga/Makefile,
  win32/msc/Makefile: removed "-configure" command-line option
  and the questions that appeared in the console window when no configuration
  file was found; now a default configuration is written and you can modify it
  using User Interface; removed prompts.[ch]

* atari.[ch], rt-config.[ch], Makefile.in, amiga/Makefile,
  win32/msc/Makefile: variables configured by the configuration file
  moved to the modules they actually belong to; config read/write moved
  to atari.[ch]; removed rt-config.[ch]


2005-10-12  Troy Ayers  <holiday42@gmail.com>
* configure.ac: For PS2 port removed check for libgcc, added check for libz.

* atari_ps2.c: Changed keyboard input to "raw" mode, as "normal" mode will not
  read directional keys.  Changed PS2 button assignments.


2005-10-09  Piotr Fusik  <fox@scene.pl>
* atari_x11.c: removed "Help" menu item disabling, because "Help" was removed
  recently

* rdevice.c: improved Device_GetInetAddress:
  - all non-control ASCII characters except space allowed (dunno if correct)
  - memory wraps at 64K
  - prevented buffer overflow

* binload.c, devices.c: use fgetc() instead of fread() for single bytes;
  start_binloading is a boolean, and should be set to TRUE or FALSE

* devices.c, rt-config.[ch]: atari_h[1-4]_dir -> atari_h_dir[0..3];
  hd_read_only -> h_read_only

* devices.[ch]: numerous improvements in H: device emulation:
  - slash, backslash, colon and greater-than are allowed H: directory
    separators on all platforms
  - parent directory on H: is "<" or ".."
  - access via H: outside the specified directories is not possible
    (I hope so!)
  - HPath -> h_exe_path, and is not modified in-place
  - fixed match(): "F?" matched "F", "FOO?BAR" matched "FOO.BAR"
  - apostrophe is valid in filenames
  - MyDOS compatible H: commands: 0x22 = mkdir, 0x29 = cd
  - H: rename command no longer allows moving files to a different directory
  - command 0x30 is "ToAbsolutePath" rather than "CurrentDirectory"
  - mkdir and rmdir no longer work in H: read-only mode
  - mkdir no longer calls umask(), and now creates directory with default
    permissions
  - H5: is no longer valid (but H6:-H9: default to the current directory)
  - apply fseek(fp, 0, SEEK_CUR) between reads and writes of a file open
    in "rb+" mode (e.g. DJGPP needs that)
  - H: directories prefixed with ':' in directory listing on MyDOS
  - base names longer than 8 characters and extensions longer than
    3 characters are truncated and terminated with '+' in directory listings
  - file size in long directory listing limited to 999999
  - long directory listing uses (SpartaDOS-compatible) 12-hour format

* ui_basic.c: silenced a warning

* win32/atari_win32.c: implemented Atari 5200 keys;
  F11 and Scroll Lock no longer press L on Atari keyboard;
  Ctrl+arrows emulate Atari arrows without Control;
  adapted to Atari800 coding style

* util/benchmark.pl: fixed program name in error messages

* util/hdevtest.lst: automatic test of H: device. Usage instructions inside.


2005-09-27  Piotr Fusik  <fox@scene.pl>
* atari_curses.c, ui_basic.c: screencode -> curses char code conversion
  is now done in curses_display_line rather than Atari_DisplayScreen:
  avoided conversion from ASCII to screencode and back in UI (it was wrong
  for some characters), this fixes Alt+O menu in Self Test

* memory.c, ui_basic.c: UI's charset is now in ATASCII order,
  so ascii_to_screen is not necessary

* monitor.c: silenced MSVC warnings

* util.h: fixed a warning about implicit declaration of unlink() in sio.c

* atari_x11.c: fixed keyboard on Motif and XView

* configure.ac: PlayStation 2 fixes; lots of small improvements


2005-09-24  Piotr Fusik  <fox@scene.pl>
* atari_ps2.c, configure.ac: added development version of the PlayStation 2
  port I'm working on together with Troy Ayers; it is limited at the moment:
  no real speed synchronization, no sound, no file selector, no monitor


2005-09-18  Piotr Fusik  <fox@scene.pl>
* cpu.c, monitor.[ch]: major improvement of monitor:
  - new command "B" manages user-defined breakpoints
    (based on Atari800Win PLus 4.0 by Marcin Lewandowski)
  - monitor now displays registers and current instruction when invoked
  - "SHOW" additionally displays current instruction
  - disassembler displays bytes before the instruction,
    to avoid misalignment where long labels are present
  - disassembler no longer displays cycles (it was misleading,
    because the number of cycles is variable for some instructions)
  - removed memory contents display in single step mode (not useful)
  - "ESCAPE" and "ESCRTS" disassembled with their argument
  - "TRON", "TROFF" -> "TRACE" (output to file, not stdout; includes
    ypos, xpos and registers)
  - "BRKHERE" -> "BBRK"
  - "BREAK" -> "BPC"
  - "YBREAK" -> "BLINE"
  - "H" is an alias to "HISTORY"
  - "ROM", "RAM" work in PAGED_ATTRIB build
  - "DLIST" groups identical instructions and prints them in one line
  - assembler supports labels
  - assembler handles "JSR 0", "LDA 0,Y" etc.
  - improved branch range checking in assembler
  - error messages for invalid "SETx" arguments
  - unofficial "NOP" and "SBC #" are marked with "!" in disassembly
  - assembler generates the official "NOP" opcode

* configure.ac: MONITOR_BREAKPOINTS ("B" command),
  MONITOR_PROFILE ("PROFILE" command), MONITOR_TRACE ("TRACE" command)

* atari.c: size of auto-started XFD images must be multiple of 128 bytes.
  Corrupted images won't work, but we gain a better detection of Atari files.

* atari.c, cpu.[ch], monitor.[ch]: break_cim -> cim_encountered
  (monitor displays "CIM encountered" not only in MONITOR_BREAK build)

* antic.[ch], cpu.c, monitor.[ch]: ypos_break_addr -> break_ypos

* cpu.c: support for Atari800Win PLus

* rt-config.[ch], ui.c: don't exit emulator if "Update configuration file"
  failed

* ui_basic.c: fixed file selector: last directory entry wasn't sorted

* ui_basic.c: right arrow in last column of file selector jumps
  to the last entry

* ui.c: improved "Extract ROM image from Cartridge":
  - allocates only as much memory as necessary rather than 1 MB
  - displays error message on write error

* ui.h, ui_basic.c, wince/port/ui_wince.c: saved a few bytes per tMenuItem

* wince/port/config.h:
  #undef HAVE_NANOSLEEP, #undef HAVE_STRDUP, #define SIZEOF_LONG 4
  (this is for use with the preprocessor, so sizeof(long) was wrong),
  #define STDC_HEADERS (this means there are stdlib.h, stdarg.h and string.h)


2005-09-14  Piotr Fusik  <fox@scene.pl>
* atari.c, configure.ac: prefer nanosleep() (POSIX.1) to usleep()
  and select(); prefer Sleep() on WIN32

* atari_x11.c: handle Motif/XView events in Atari_Keyboard() rather than
  Atari_DisplayScreen() - F1 User Interface now works in these versions;
  TODO: key repeat does not work on Motif and is too fast on XView

* pokey.c: can use Win32 API instead of time()

* rtime.c: can use Win32 API; fixed Y2K bug

* compfile.c, devices.c, sio.c, util.[ch]: Util_unlink();
  use unlink() and not remove(), because remove() calls unlink() for files
  and we never remove() directories

* util.c: fixed Util_splitpath on root directory path

* ui_basic.c: ".." in Win32 API based file selector on WINCE

* ui_basic.c: include B: in DOS_DRIVES; detect floppies on WIN32


2005-09-11  Piotr Fusik  <fox@scene.pl>
* ui_basic.c: fixed file selector which I broke yesterday

* atari.c: fixed parse error in zlib-less compilation

* atari.c, devices.c: removed unnecessary "Fatal Error" messages

* memory.c, remez.c, screen.c: use Util_malloc() instead of malloc()

* rdevice.c: avoid malloc()

* ui_basic.c: use Util_realloc() instead of realloc()

* ui.h, ui_basic.c: fixed warnings

* rtime.c: replaced "-rtime <onoff>" with "-rtime" / "-nortime"
  documented in "-help"

* devices.c: replaced "-hdreadonly <onoff>" with "-hreadonly" / "-hreadwrite"

* devices.c, monitor.c, util.[ch]: Util_strupper() and Util_strlower()

* pokey_resample.[ch]: removed dead code

* act/fox.act: removed, use jakub.act instead (it is built-in)

* monitor.c: extended labels (MONITOR_HINTS):
  - can be disabled with "LABELS OFF"
  - can be loaded with "LABELS LOAD" / "LABELS ADD"
    (supported are label tables generated by xasm, Mad-Assembler
     and HardCore Assembler)
  - can be defined with "LABELS SET"
  - you can use a label where a hex value is expected
  - binary search replaced with linear, for simplicity

* devices.c, win32/msc/config.h: H: lock/unlock work on MSVC,
  using Win32 API directly; rename, mkdir, rmdir can be implemented
  using Win32 API; Win32 API implementation of directory listing
  is now the default and does not use stat(); fixed Y2100 bug :-)

* ui_basic.c, util.[ch]: implemented file selector on MSVC

* ui_basic.c: try to handle directories with ']' in their names

* ui.c: removed an opendir() call (unnecessary, I think!)

* compfile.[ch], sio.c: removed the unused diskno parameter from opendcm()
  and openzlib()

* remez.[ch]: fprintf(stderr, ...) -> Aprint();
  adapted to Atari800 coding style; added "static" to functions;
  added "const" to pointers

* atari.h, devices.c: "defined(WIN32) || defined(__PLUS)" -> "defined(WIN32)"
  (Atari800Win PLus should define WIN32)

* dos/dos_sb.c: fixed some of gcc -pedantic warnings;
  adapted to Atari800 coding style

* win32/atari_win32.c: F6 = Help, F7 = Break; TODO: 5200 keys


2005-09-10  Piotr Fusik  <fox@scene.pl>
* configure.ac: #define our symbols to 1 (just like autoconf's own symbols);
  described basic and *curses targets

* win32/screen_win32.c: improved error handling:
  - DirectX docs suggest using FAILED() instead of !=DD_OK
  - display the name of the failed function and the return code
    (unfortunately DXTrace() is available only in DirectX 8.0 and higher)
  - display a hint if SetDisplayMode fails with DDERR_INVALIDMODE
    (the default 320x240 doesn't work on my Win98SE / Radeon 9000,
     although it works on XP on the same machine)

* ui.h, ui_basic.c: char * -> const char *

* rt-config.c, ui_basic.c, util.[ch]: simplified code by introducing
  Util_splitpath() and Util_catpath()


2005-09-09  Piotr Fusik  <fox@scene.pl>
* DOC/HOWTO-DIRTYSPAN: an alternative to DIRTYRECT (just an idea)


2005-09-07  Piotr Fusik  <fox@scene.pl>
* sound_unix.c: set speed after stereo, because the allowed speed may be
  different for stereo

* antic.c, atari.[ch], atari_falcon.c, atari_sdl.c, atari_x11.c, cartridge.c,
  cassette.c, colours.c, compfile.c, devices.c, input.c, monitor.c,
  rt-config.c, rtime.c, screen.c, sound_falcon.c, sound_unix.c, ui.c,
  ui_basic.c, util.[ch], dos/sound_dos.c, Makefile.in, amiga/makefile:
  "util" is a new useful module not related directly to the emulation

* configure.ac, list.[ch], ui_basic.c, amiga/makefile: improved file selector:
  - sorts filenames case-insensitively
  - displays "Please wait..." while the directory is read
  - uses less memory (dynamic array instead of linked list, bye-bye list.[ch])
  - faster (quicksort instead of bubblesort)

* compfile.c: fixed 32 KB memory leak per open zlib-compressed disk image

* sio.c: optimized SIO_ChkSum()

* ui.c: improved "Create Cartridge from ROM image":
  - don't exit the emulator without any cleanup if the input file cannot
    be read, display an error message instead
  - display a message for files of non-standard sizes (including files that
    are already CARTs)
  - allocate only as much memory as necessary rather than 1 MB

* ui.c: improved "Save Disk Set" and "Make blank ATR disk":
  - can be cancelled by pressing Esc while editing the filename
  - display a message on success
  - display an error message on failure
  - don't operate on NULL if fopen() fails

* ui_basic.c: shorten the messages (especially the ones with long filenames)
  to fit on screen

* antic.c, atari.c, colours.h, cpu.c, mzpokeysnd.c, pia.c, pokey.c,
  pokeysnd.c, win32/atari_win32.c, win32/joystick.c, win32/keyboard.c,
  win32/sound.c: silenced MSVC 6 /W3 warnings

* win32/main.c, win32/screen_win32.c, win32/msc/config.h, win32/msc/Makefile,
  DOC/INSTALL: DirectX version can be compiled with Microsoft 32-bit C/C++
  Compiler 6.0. Currently missing features:
  - file selector in ui_basic (one has to type the filename)
  - lock/unlock operations on H: devices
  - stereo (just haven't tested it yet)


2005-09-06  Perry McFarlane  <perry_m@fastmail.fm>
* antic.c: a fix for DMACTL written twice in the same scanline


2005-09-05  Kostas Nakos  <knakos@gmail.com>
* src/wince/* : Updated the wince port to work with Smartphones.
  Several other improvements to the port.


2005-09-04  Piotr Fusik  <fox@scene.pl>
* monitor.c: initialize break_addr with 0xd000. Previously, Atari800
  compiled with MONITOR_BREAK (the default) entered the monitor
  rather than executing the instruction at address 0x0000
  (perfectly legal for 6502 code).

* ui_basic.c: don't hide ATR/XFD file extensions in the file selector

* atari_svgalib.c: Atari 5200 keys

* sound_unix.c: fixed sound on Linux. This is black magic to me.
  I hope there will be some feedback from users.


2005-09-03  Piotr Fusik  <fox@scene.pl>
* atari.c, gtia.c: I broke the BASIC version recently, fixed

* cpu.c: cycle-exact Read-Modify-Write instructions for NEW_CYCLE_EXACT

* antic.c, configure.ac, gtia.c, util/benchmark.pl: removed CYCLE_EXACT
  (superseded by NEW_CYCLE_EXACT)

* devices.c: improved "K:" input in BASIC version: use just the first
  character from the entered line and ignore the remaining characters
  (including EOL). This is because the input from the terminal
  is line-buffered, so we have to press Enter for the Atari emulation
  to continue - but we don't want this Enter to be delivered
  to the emulated Atari.

* devices.c: BASIC version: Atari Clear Screen, Backspace, Tab and Bell
  converted to the corresponding ASCII codes

* atari_x11.c, configure.ac: (x11-)xview(-shm) now compiles and works

* atari_x11.c: fixed Shift+F5; F8 and (Shift+)F10 are now "Enter monitor"
  and "Save (interlaced) screenshot", respectively (just like in other
  versions of Atari800); don't clear key_shift when another key is pressed
  TODO: Alt+letter shortcuts

* atari_svgalib.c: implemented F6 (Help) and F7 (Break)

* amiga/config.h: updated for clib2-1.194


2005-08-31  Piotr Fusik  <fox@scene.pl>
* atari.[ch], ui.c: auto-starting any file supported by the emulator
  via the command line, User Interface or Alt+R

* binload.c: a fix for BASIC loader that didn't work if drive 1
  was enabled but contained no disk

* cpu.c: CYCLES_PER_OPCODE, NO_V_FLAG_VARIABLE, PC_PTR, PREFETCH_CODE
  for better (?) performance (not enabled by default);
  WRAP_64K and WRAP_ZPAGE for very precise emulation;
  optimized CPU_GetStatus(), CPU_PutStatus(), BRANCH()

* devices.c: created Device_OpenDir() and Device_ReadDir() that simplify
  searching directories. On Windows, if opendir() is not available,
  these functions are implemented using Win32 API. Changed behaviour:
  - directory listing and wildcard functions Rename, Delete, Lock, Unlock
    should now correctly handle the current directory, root directories
    and files with uppercase letters on case-sensitive filesystems
  - filenames in directory listing are no longer converted to uppercase
  - filename extension in the directory listing is now the filename part
    after the last dot and not the first one

* devices.c: improved H5:-H9:
  - reading supports CR/LF and CR files in addition to LF
  - writing uses native EOLs rather than LFs

* devices.c: Device_HHSPEC_Disk_Info(), Device_HHSPEC_Current_Dir()
  no longer use dPutByte(), so the result is wrapped at 64K,
  doesn't get written to ROM and may be written to hardware registers

* gtia.c: optimized GTIA_GetByte()

* log.c: fixed Aflushlog's bad behaviour when the log contained percents

* memory.[ch]: added two extra bytes to memory[], because the CPU
  emulation can access them

* cartridge.h, memory.[ch]: state files should now work with PAGED_ATTRIB

* boot.h, ui.c: MakeBlankDisk() now writes a blank Single Density disk
  rather than a 3-sector disk with useless executable loader - removed boot.h

* atari.[ch], colours.c, gtia.[ch], input.c, log.[ch], mzpokeysnd.[ch],
  pokey.[ch], pokeysnd.[ch], rt-config.[ch]: support for Atari800Win PLus

* util/benchmark.pl: dropped "-run" so any Atari program may be used


2005-08-27  Piotr Fusik  <fox@scene.pl>
* atari_sdl.c, atari_x11.c: now compile with --disable-sound

* cartridge.c, memory.c: cast the result of malloc()

* cassette.h: declared CASSETTE_CreateFile()

* compfile.[ch], sio.c: created compfile.h

* cpu.c: restored that "continue" at the end of the main loop

* devices.[ch]: DEFAULT_H_PATH moved to devices.h (for Atari800Win PLus)

* input.c: corrected file description

* memory.h: wrap macro arguments in parentheses, just in case

* remez.c: fixed a memory leak (found by Marcin Lewandowski)

* configure.ac, sound.c, sound_unix.c:
  renamed sound.c to sound_unix.c to avoid confusion

* statesav.c, ui_basic.c: MSVC declares getcwd() in <direct.h>

* atari.c, util/benchmark.pl: performance tests
  (some results posted to the mailing list)


2005-08-24  Piotr Fusik  <fox@scene.pl>
* atari.c: load state files from the command line using "-state"

* sio.c: recognize disk image format by the header rather than filename
  extension (*.DC3 now work as DCM)

* screen.h, ui.c: show_atari_speed, show_disk_led, show_sector_counter
  available in "Display Settings"

* devices.c: H: and R: work with PAGED_ATTRIB

* screen.c: fixed Screen_DrawAtariSpeed() not updating with refresh_rate > 1

* ui_basic.c: use stricmp() if there's no strcasecmp()

* monitor.c: people may mean accumulator mode when they write "ASL A"
  in the assembler

* atari_curses.c: keypad works on PDCurses

* cpu.[ch]: changed remember_PC_curpos and remember_jmp_curpos
  to unsigned, because "x % POWER_OF_TWO" is much faster for unsigned x
  (1 instruction vs 6 on x86)

* antic.c, monitor.[ch]: changed ypos_break_addr from UWORD to int (faster)

* cpu.c, monitor.[ch]: PROFILE -> MONITOR_PROFILE, TRACE -> MONITOR_TRACE

* monitor.c: combined consecutive printfs


2005-08-22  Piotr Fusik  <fox@scene.pl>
* cartridge.c: Atarimax cartridges can be bank-switched by reading $D5xx

* atari.c, emuos.h: stripped 2k more from emuos (it has no Floating Point,
  obviously!)

* atari.c, memory.c: don't try to load BASIC ROM in 400/800 emuos mode

* devices.c, mkimg.c, monitor.c, prompts.c, rdevice.c, sio.c:
  avoid the potentially signed-char-unsafe <ctype.h> functions (macros?)

* configure.ac: good advice for those poor souls who run "configure"
  with just "--enable-veryslow" and expect a miracle ;-)

* atari.h, ui.c: new "Display Settings" menu allows for changing the framerate
  and toggling sprite_collisions_in_skipped_frames


2005-08-21  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c: Atarimax cartridges

* atari.c, statesav.c: fixed loading of non-verbose state files

* atari.c: "--usage" and "--help" now work

* memory.[ch], sio.c: CopyFromMem and CopyToMem (both used by SIO)
  now work with hardware registers

* monitor.c: use fflush(stdout) where necessary;
  normalized all hex output to uppercase;
  improved "JUMPS": now displays the instructions;
  improved "PROFILE": now displays the instructions;
  accept "ASL @" in assembler

* rt-config.c: default filename for the 5200 ROM;
  moved Atari_ConfigInit() to the end of RtPresetDefaults(),
  so the Smartphone port can override enable_new_pokey

* screen.c: improved Screen_DrawAtariSpeed: updated every 0.5 sec or so

* sio.c: removed unportable DEBUG code

* configure.ac, statesav.c: use #ifdef HAVE_STRERROR

* configure.ac, compfile.c, devices.c: use #ifdef HAVE_REWIND

* ui.c: error messages for state load/save

* atari.[ch], compfile.c, configure.ac, devices.c: use ANSI/POSIX tmpnam()
  for creating filenames of temporary files, rather than unportable
  mktemp/mkstemp. tmpnam() generates filenames in system's temporary
  directory.

* antic.c, atari.c, atari_curses.c, gtia.c: Self Test menu highlighting
  on Curses

* atari_curses.c: fixed display of '\x7f';
  use KEY_HELP, KEY_SHELP, KEY_LHELP, KEY_BREAK, KEY_HOME, KEY_CLEAR,
  KEY_IC, KEY_IL, KEY_DC, KEY_DL, KEY_STAB, KEY_CTAB if available

* atari_sdl.c: "-rotate90" now works correctly on little-endian machines;
  don't initialize sound with "-help"; 5200 keys; F6=Help, F7=Break;
  Shift/Control for Atari, Help, Space, Return, Tab, arrows;
  Alt+B isn't repeated at a crazy speed

* atari_x11.c: MUCH faster screen display; 5200 keys; Caps can be released;
  Shift/Control for Help, Escape, Space, Return, Tab

* configure.ac: fixed x11-motif

* antic.[ch], compfile.c, input.c, screen.h, dos/atari_vga.c, ui.c:
  minor clean up


2005-08-19  Piotr Fusik  <fox@scene.pl>
* atari.c, screen.[ch]: Screen_Initialise();
  support "-screenshots <pattern>" on the command line: it defines a pattern
  for quick screenshots (i.e. the ones made with (Shift+)F10).
  For example "-screenshots /home/fred/foo##.pcx" means that
  /home/fred/foo00.pcx, /home/fred/foo01.pcx, ... should be used.
  Existing files are overwritten only if all the files defined by the pattern
  exist. Submitted as a feature request on sf.net.

* atari_curses.c: Alt+letter work on PDCurses;
  Ctrl+letter should be Control+letter, not Shift+Control+letter;
  Always treat 0x08 and KEY_BACKSPACE as Backspace;
  F10 = Screenshot (must run configure with --disable-cursesbasic to make this
  one work)

* atari.c, emuos.h: stripped 6k of zeros from emuos

* ui.[ch], ui_basic.c: shortcut keys (Alt+letter, F9, ...) didn't work in UI
  (reported as a bug on sf.net)

* monitor.c: addr defaults to regPC (handy for "D" and "LOOP");
  new command "LOOP": disassemble from the beginning of a loop that contains
  the instruction at the specified address.
  The loop is detected by looking for a branch instruction after the specified
  address whose target is below (or equal to) the specified address.
  Unconditional (JMP) loops are not detected.


2005-08-17  Piotr Fusik  <fox@scene.pl>
* configure.ac, *.c: autoconf improvements for Playstation 2;
  include config.h before system headers as autoconf's manual suggests

* configure.ac: don't use AC_FUNC_MALLOC because we never do malloc(0)

* rt-config.c: check if print_command is safe for sprintf format

* atari_x11.c, memory.[ch], ui.c: removed PILL (use cartridge images instead)


2005-08-15  Piotr Fusik  <fox@scene.pl>
* atari.c: corrected VOL_ONLY_SOUND in BASIC and CURSES_BASIC

* binload.[ch], sio.c: BIN_loade_start -> BIN_loader_start

* cpu.c: corrected cycles for unofficial opcodes 0xB3, 0xBB, 0xBF

* cpu.c: auto-define NO_GOTO for non-gccs

* cpu.[ch], monitor.c: HISTORY displays ypos xpos also with NEW_CYCLE_EXACT
  disabled

* cpu.c, memory.h: changed some | to +: this gives better code on x86 due to
  the LEA instruction

* monitor.c: "C", "M" and "S" support hardware registers

* monitor.c: display correct value for ZP,Y instruction

* monitor.c: PENL -> PENV

* cartridge.c, memory.[ch]: code simplified by defining SetROM and SetRAM
  for PAGED_ATTRIB

* devices.c: '!', '#', '$', '&', '(', ')', '-' and '@' are now valid
  in H: filenames

* atari.c, binload.[ch], cartridge.c, cpu.[ch], devices.c, ui.c:
  direct loading of Atari Basic programs. Supported are:
  - SAVEd (*.BAS) programs
  - LISTed (*.LST) programs with auto-detected Atari, LF, CR/LF or CR
    line terminators
  From the user's point of view, loading of Atari Basic programs works
  exactly like loading binary executables: use "-run" from command line
  or "Run Atari program directly" from the User Interface.
  The inner workings are much more interesting:
  0a. BIN_loader() detects file type: *.BAS programs start with two 0x00 bytes,
      *.LST programs must start with a digit.
  0b. During coldstart Atari Basic is enabled, even if disable_basic is set.
  0c. Device_PatchOS() installs a patch for E: write.
  1. The "READY" prompt is expected on E:. This is not necessarily
     the first thing printed on E: - a DOS may print its messages before running
	 Atari Basic.
  2. RUN "E:" (for *.BAS) or ENTER "E:" (for *.LST) is passed to Atari Basic
     via E:.
  3. A patched E: open handler installs handlers for read and close operations.
  4. Reading bytes from the file. A conversion is applied to *.LST files:
     first 0x9b, (0x0d,0x0a), 0x0d or 0x0a found in the file becomes the line
	 terminator and is converted to 0x9b.
  5. Close file. Patches are removed.
  6. (for *.LST) The "READY" prompt is expected on E:. If something different
     appears (probably "ERROR"), skip the step 7.
  7. (for *.LST) "RUN" is passed to Atari Basic via E:.


2005-08-14  Piotr Fusik  <fox@scene.pl>
* dos/dos_sb.c, dos/sound_dos.c: stereo now works

* dos/atari_vga.c, dos/sound_dos.h: sound_dos.h removed, use sound.h instead

* rt-config.c: support 16, 576, 1088 RAM; skip non-working options

* ui_basic.c: avoid negative array indexes with special keys pressed in UI


2005-08-13  Piotr Fusik  <fox@scene.pl>
* atari_curses.c: TAB is now TAB rather than CONTROL+I;
  F8 is "enter monitor" not coldstart;
  Start, Select, Option can now be released;
  fixed -wide2 mode

* antic.c, atari.c, atari_curses.c: generate curses screen basing on the DL
  rather than OS screen - Self Test and halt screen of emuos are now visible

* configure.ac: support --target x11-shm, x11-motif, x11-xview, x11-xview-shm;
  changed hints for symbols in config.h to full sentences,
  to be consistent with autoconf-generated hints;
  fixed hint for VOL_ONLY_SOUND; lack of zlib is no fatal error;
  check for signal.h, termios.h, memmove, signal, strspn;
  CURSES_BASIC; no sound objects if SOUND disabled

* antic.c, atari.c, configure.ac, gtia.c, input.c, ui.c, ui_basic.c:
  CURSES version without bitmap screen generation (i.e. no screenshots)
  enabled with CURSES_BASIC - faster and smaller, enabled by default

* cartridge.c, cassette.[ch], pokey.[ch], sio.c: fixed warnings

* antic.[ch], gtia.c, pokey.c, statesav.[ch], ui_basic.c: fixed indentation

* ui.c: not compiled-in features don't show in menus

* cartridge.c, sio.c, statesav.[ch]: added functions for filename save/read

* configure.ac, Makefile.in, ui.c: no sound emulation if sound is disabled


2005-08-10  Piotr Fusik  <fox@scene.pl>
* atari_basic.c: sound support; don't link with input.o

* atari.c: BASIC and VERY_SLOW now generate all kinds of interrupts.
  This generally means that you can hear music and SIO works without a patch.
  Timing in these versions is now much more precise.

* antic.[ch], monitor.c: "dlist" in monitor now supports Display Lists
  in extended memory with exclusive Antic access

* devices.c: patching E: open doesn't make sense

* cassette.c, ui.c: hold_start_on_reboot moved to cassette.c

* antic.c, cartridge.c, gtia.c, memory.c, pia.c, pokey.c, sio.c:
  no state files in BASIC version

* configure.ac, Makefile.in: link cycle_map.o only for NEW_CYCLE_EXACT;
  CYCLE_EXACT, NEW_CYCLE_EXACT, CRASH_MENU, VERY_SLOW not available in BASIC
  version; input.o, screen.o, colours.o, statesav.o, list.o, ui_basic.o, ui.o
  not linked in BASIC version

* atari.c, cpu.c, gtia.c, pia.c, pokey.c: input.o and statesav.o not linked
  in BASIC version

* Makefile.in: "make clean" now additionally cleans dos/, falcon/ and win32/

* mzpokeysnd.c, pokeysnd.[ch], sndsave.[ch]: Sound Recording was designed
  only for 8-bit unsigned samples mono on little-endian machines. Even in this
  configuration it didn't work, because the frequency wasn't written
  in the header (and you should have selected old pokeysnd in order to have
  any samples in the file). Now 8-bit unsigned samples mono/stereo old/new
  Pokey should work on all machines. 16-bit and signed samples are still TODO.

* ui.c: Sound Recording to atari000.wav, atari001.wav, etc. rather than 0.raw,
  1.raw. Doesn't overwrite existing files now. TODO: prompt for filename.

* atari.c: close sound file at exit, so correct headers are written

* antic.c, cartridge.[ch], cpu.c, emuos.h, gtia.c: added consts

* antic.c: fixed code formatting

* configure.ac: small fix for ncurses and support for pdcurses

* atari_curses.c: backspace now works on DJGPP/pdcurses


2005-08-07  Piotr Fusik  <fox@scene.pl>
* mzpokeysnd.c: eschew traditional comments in log messages!

* devices.c: MSVC headers have no S_IRUSR nor S_IWUSR

* devices.c: empty Hx_DIR now refers to the current directory rather than
  the root

* ui.c: display error messages for "Run BIN file", "Select tape",
  "Insert cartridge" and "Save screenshot"

* compfile.c: fixed indentation; other minor improvements


2005-08-06  Piotr Fusik  <fox@scene.pl>
* configure.ac, devices.c: check for rename() and snprintf()

* devices.c: fixed error codes; fixed "unused" warnings; other minor fixes

* antic.[ch], atari_sdl.c, atari_x11.c, cassette.[ch], cycle_map.h,
  pokeysnd.[ch], screen.h, ui.[ch], ui_basic.c, dos/atari_vga.c, dos/vga_gfx.h:
  changed () function signatures to (void)

* antic.c, atari_sdl.c, atari_x11.c, cassette.c, cycle_map.c, monitor.c,
  pokeysnd.c, ui_basic.c: fixed indentation

* rtime.c: optimized RTIME_GetByte

* mzpokeysnd.c, pokey.c, pokeysnd.h, pokey_resample.c, prompts.c:
  // comments changed to /* */

* emuos.lis, emuos.h, ui_basic.c: updated copyright year

* atari.c: if no sleep-like function available, fall back to time polling

* monitor.c: fixed a warning


2005-08-05  Piotr Fusik  <fox@scene.pl>
* configure.ac: added checks for some headers and functions used in devices.c
  and atari.c.
  VERY IMPORTANT: if you don't use Configure, make sure you define HAVE_*
  symbols (in config.h) for the header files and functions you have.

* sio.c: getcwd() may be unavailable

* devices.c, devices.h: fancy I/O functions may be unavailable;
  got rid of numerous #ifdef BACK_SLASH

* statesav.c: ReadDisabledROMs wasn't actually called!
  Thank you GCC 4 for the warning.

* atari.c: use best time functions available - now checked by Configure,
  not hard-coded for platforms (almost...)


2005-06-24  Piotr Fusik  <fox@scene.pl>
* sio.c: fixed PERCOM configuration (spotted by Erhard Puetz):
  - 1 track, 1 side for non-standard disk images (i.e. exactly 65535 sectors
    for 65535 sectors image)
  - 80 tracks for standard 720K, 1.44M and 2.88M disks
  - MFM byte is 0 for SD, 4 otherwise
  - unused bytes are set to 0


2005-05-20  Piotr Fusik  <fox@scene.pl>
* antic.c, sndsave.h, ui_basic.c: fixed an error and some warnings reported
  by GCC 4.0.0


2005-05-13  James Wilkinson  <james@slor.net>
* win32/atari_win32.c, win32/joystick.[ch], win32/main.c: added DirectX
  joystick support

* win32/atari_win32.c: cleaned up initialization with nonexistent config file


** 1.3.6 released on 2005-04-30

2005-04-30  Petr Stehlik  <pstehlik@sophics.cz>
* ui.c, boot.h: "Make Blank Boot Disk" added to "Disk Management",
  inspired by LNG (lng.sourceforge.net). It creates a blank boot atr file.
  Before you can use this blank disk, you must format it. Patch by
  'maddoxik' (whoever he is, didn't supply real name).


2005-03-24  Piotr Fusik  <fox@scene.pl>
* cpu.c: fixed incorrectly saved N flag when entering the monitor (bug found
  by Marcin Lewandowski)

* devices.c: added "-help"


2005-03-15  Achim Haertel <achim.haertel@e-technik.tu-chemnitz.de>
* casette.[ch], pokey.[ch], sio.[ch], pia.c: implemented cassette loading
  by hardware registers.
  Examples of now working games:
  - Ninja: (eof-)blocks pass on tape while the OS waits for a leader.
  - Elektraglide has a nonstandard format which is not readable by the
    SIO-patch but requires raw loading.


2005-03-11  Piotr Fusik  <fox@scene.pl>
* atari_x11.c: "-mouse" works. Set default clipping area to 336x240.
  x11-motif is now compilable, possibly also x11-xview.


2005-03-10  Piotr Fusik  <fox@scene.pl>
* atari_basic.c: updated for new Atari800_Frame()

* atari_sdl.c: corrected Atari_TRIG() and don't initialize sound on "-help"

* ui.c: "Extract ROM image from Cartridge" should skip the CART header,
  not just copy the whole file

* ui_basic.c: fixed a memory leak

* ui.[ch], atari.c, cpu.c: removed the unused "screen" parameter from ui()
  and SelectCartType()


2005-03-09  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: switched back to Atari800_Frame like all other ports do.
  So far everything looks OK. Why did Jacek abandon the Atari800_Frame
  way? Weird.
  Also finally disabled propagating of the KP0-KP9 keys to key_code.
  Without this the keyboard joystick emulation was mostly unusable.
  Needs a more general solution - masking out all keyboard joystick keys.
  Copy from atari_vga.c, it's solved properly there, IIRC.

* atari_x11.c: disabled propagating of the KP0-KP9 keys to key_code.

* configure.ac: enables linux joystick by default. The atari_x11.c needs
  a lot of cleanup: move the mouse emulation to input.c and make sure
  the keyboard joystick, mouse joystick and real joysticks do cope together.


2005-03-08  Piotr Fusik  <fox@scene.pl>
* antic.c: added missing combinations of ANTIC modes with GTIA modes.
  GTIA modes are correctly scrolled horizontally.

* compfile.c, devices.c, gtia.c, monitor.c, mzpokeysnd.c, sio.c, ui_basic.c:
  killed gcc -W warnings. Remained only the warnings about unused parameters.

* antic.c, input.c, dos/sound_dos.c: handle "-help" option


2005-03-05  Piotr Fusik  <fox@scene.pl>
* ui_basic.c: fixed "Error opening '' directory"

* input.[ch]: support AKEY_BREAK

* atari.[ch], atari_curses.c, atari_falcon.c, atari_svgalib.c, atari_x11.c,
  amiga/amiga.c, dos/atari_vga.c, win32/main.c, wince/port/atari_wince.c:
  support for special AKEY_*, refresh rate control and atari_sync()
  moved to Atari800_Frame()

* atari_curses.c, atari_falcon.c, atari_x11.c: F6 is Atari HELP key


2005-03-03  Piotr Fusik  <fox@scene.pl>
* win32/*, configure.ac:
  renamed win32/screen.[ch] to win32/screen_win32.[ch]

* wince/port/*, wince/PocketAtari.vcp:
  renamed wince/port/screen.* to wince/port/screen_wince.*

* atari.[ch], screen.[ch], antic.c, cpu.c, input.c, ui_basic.c:
  moved screen-related variables to the new "screen" module

* configure.ac, makefile, atari.[ch], screen.[ch], sio.[ch], atari_sdl.c,
  dos/atari_vga.c:
  deleted diskled.[ch], moved disk LEDs to the new "screen" module,
  added sector counter and speedometer


2005-02-23  Piotr Fusik  <fox@scene.pl>
* colours.[ch]: refactored, using jakub.act by default

* log.c, configure.ac: use vsnprintf only if available

* screen.[ch]: renamed from ataripcx.[ch] and added PNG screenshots

* atari.c, atari_curses.c, atari_sdl.c, atari_svgalib.c, atari_x11.c, ui.c,
  Makefile.in, amiga/makefile, dos/atari_vga.c, win32/main.c,
  wince/port/atari_wince.c, wince/PocketAtari.vcp:
  PNG screenshots


2005-02-22  Piotr Fusik  <fox@scene.pl>
* cartridge.c: switch back on the main bank of switchable XEGS cartridges
  (bug found by Chris Hutt)


2005-01-06  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: F8 (enter monitor) was not implemented. Fixed. Also
  entering monitor now switches off the fullscreen mode which makes
  the monitor usable in X-Windows (not sure about framebuffer but
  I'd guess for that one we'd have to turn off the graphics completely).


** 1.3.5 released on 2004-12-30

2004-12-29  Petr Stehlik  <pstehlik@sophics.cz>
* atari_x11.c: Ken Zalewski contributed a patch for keyboard handling
  that fixes a segfault (XLookupString was called even if the event
  was not keyboard related).

* atari_x11.c: after looking into the keyboard handling under X11
  I realized that keyboard auto-repeat was not working at all.
  I tried to fix it by keeping the keycode status persistent.
  It seems to work in non-XVIEW/non-MOTIF version.


2004-12-28  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: Daniel Serpell contributed a patch for keyboard handling
  that makes the Atari800 keyboard working on non-US keyboard layouts
  simply by using the Unicode values of the keys (instead of scancodes).
  Also, keys Control-0 to 9 and Control-A to Z were added. The "Atari"
  key is mapped to the left Windows key, the Caps-toggle key is mapped
  to the right Windows key and the Atari Shift+F1 and Shift+F2 keys
  are mapped to host's PageUp and PageDown keys (as this is the function
  of those keys in the Atari-XL OS).


** 1.3.4 released on 2004-12-27

2004-11-26  Petr Stehlik  <pstehlik@sophics.cz>
* rt-config.c: fixed many possible buffer overflows that were dangerous if
  atari800 was installed suid root. Thanks for analysis go to Adam Zabrocki.

* svgalib.c: fixes a compilation error when compiling with GCC 3.4.x
  (compiler chokes on label at end of block). Thank for patch to Andrew Church


2004-11-17  Perry McFarlane  <perry_m@fastmail.fm>
* antic.c: Fix for Timeslip game.  Newcycleexact dmactl change bug.


2004-09-24  Sebastian Bauer
* ui_basic.c: fixed NULL pointer access in file dialog which happened if there
  were no files in the selected directory.

* amiga/*: updated


** 1.3.3 released

2004-08-08  Petr Stehlik  <pstehlik@sophics.cz>
* various files: updated for 1.3.3 release


2004-08-05  Christian Groessler <cpg@aladdin.de>
* atari_x11.c: adds the left ctrl key as joystick button if "-keypad" is
  in use. Also cleans up mostly by adding ANSI C function headers.


2004-07-26  Sebastian Bauer
* amiga/*: major update, cleanup, fixed console keys, upgraded sound support


2004-07-05  Petr Stehlik  <pstehlik@sophics.cz>
* configure.ac: Ken Ames sent a patch that supports OS/2


2004-06-06  Petr Stehlik  <pstehlik@sophics.cz>
* atari_x11.c: Christian Groessler's patch adds missing keyboard autorepeat
  when in the internal Atari800 debugger.

* prompts.c: fixed RemoveSpaces() - should not remove space from within
  the string, only leading and trailing space chars should be removed.

* rt-config.c, configure.ac: SUPPORTS_ATARI_CONFIG* now set in configure.ac
  for DOSVGA and SDL. This also fixes joystick definition not loaded in
  the DOSVGA port since the #ifdef VGA was changed to #ifdef DOSVGA.

* atari_sdl.c: emulated joysticks configured in the atari800.cfg file
  thanks to patch from Benny (Fishy_PKAT151). This is incompatible
  with the DOS VGA port configuration so I expect this to change
  before 1.3.3 release.

* rt-config.c: RemoveSpaces() called on both keyword and its value.

* rt-config.c, atari_sdl.c: bunch of Aprint() cleaned up


2004-06-04  Petr Stehlik  <pstehlik@sophics.cz>
* config.{sub,guess}, debian/*: updated by the atari800 debian diff file


2004-06-03  Piotr Fusik  <fox@scene.pl>
* antic.c: ANTIC mode 2 + GTIA mode 10 should be shifted right by a half
  of a pixel [a fix for the upcoming demo :-) ]


2004-06-02  Petr Stehlik  <pstehlik@sophics.cz>
* atari_x11.c: Christian Groessler suggested to add XK_Break key check
  so that Ctrl+Pause on linux machine generates the AKEY_BREAK keypress.


2004-02-21  Petr Stehlik  <pstehlik@sophics.cz>
* rdevice.c: Martin Albert, our new Debian package maintainer, suggested
  to allow /dev/ttyS0 for all Linux archs, which is a good idea.
  This device should be runtime configurable, anyway.


2003-12-21  Petr Stehlik  <pstehlik@sophics.cz>
* ui_basic.c: Aprint warning that fileselector couldn't open a folder.
  The warning should be propagated to the UI and shown to user. Or better
  yet, the Fileselector should be able to modify the path until it could
  open it (example: /tmp/state_files/ -> /tmp/)


** 1.3.2 released

2003-12-20  Petr Stehlik  <pstehlik@sophics.cz>
* macosx/*: all old files removed and new up-to-date ones (from Mark Grebe)
  stored in a single macosx.tar.gz file for easier maintenance.

* various files: increased version for new 1.3.2 release


2003-12-16  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt, DOC/README: new cartridge types:
  Phoenix and Blizzard

* cassette.c: write cassette description, update tape position indicators
  when writing, changed C++ style comments to traditional

* atari.c: check OS before applying C: patches


2003-12-17  Mark Grebe  <markgrebe@yahoo.com>
* compfile.c: Fixed serious bug in Type 41 decoding
* mzpokeysnd.c: Added console and SIO Sound back in


2003-11-22  Achim Haertel <achim.haertel@e-technik.tu-chemnitz.de>
* atari.c: when the snailmeter is enabled and the speed grown beyond 100%
  a negative amount of memory was tried to be filled.


2003-11-14  Achim Haertel <achim.haertel@e-technik.tu-chemnitz.de>
 Cassette handling greatly improved:

* atari.[ch]: OS patched for tape leader recognition

* cassette.[ch]: Loading improved, skips now blocks which pass on tape while
  the OS waits for a leader. Writing implemented. Some bugfixes (CAS format
  chunk header size is always 8, record checksum for raw files).

* sio.c: Evaluates i/o-commands for cassette

* ui.c: "Load tape image" renamed to "Select tape image"

 The remaining open points are:
 - State of cassette operation is not saved in state file - is the expense
   necessary?

 - Tape file selector (and disk too) would need 2 additional points at top:
   <Eject> and <New> (atm tape save is only possible if you create a file
   with 0 length and insert that).


2003-11-13  Perry McFarlane  <perry_m@fastmail.fm>
* antic.c: DMACTL NEW_CYCLE_EXACT width decrease fix for SERIOUS diskmag #8


2003-11-13  Petr Stehlik  <pstehlik@sophics.cz>
* log.c: corrected buffer overflow found by Laios Mircea


2003-10-26  Mark Grebe  <markgrebe@yahoo.com>
* cartridge.c, sio.c, statesav.c: saving disk and cartridge info
  in the state file. Bumped the state file version number, and then added
  save functions to the Cart and SIO files. It currently supports reading
  the current version (3) as well as the new version (4) state files.
  It writes only the new version (4). The filename information for cartridge
  and disk information is stored in two ways. It is stored as a relative
  path if the file is in the emulator's directory tree, and it is stored
  as an absolute path if it isn't. If it doesn't find the cartridge or disk,
  it does not refuse to load the state, but continues. New state file format
  works extremely well with the bank switched cartridges.


2003-10-25  Petr Stehlik  <pstehlik@sophics.cz>
* atari_falcon.c: disable compiling with stereo sound enabled

* log.c: do MacOSX a favor and generally allow platform specific Aprint
  output

* atari.c: wrong path to disk image is not a reason to quit with an error
  message

* mzpokeysnd.c: simple fix for SERIO_SOUND (thanks to Mark Grebe)

* pokey.c: some platforms (MacOSX) might need different SOUND_GAIN
  so it's possible to define it in configure/Makefile now.

* atari_sdl.c: hatefully backported fix from input.c (see 2003-09-21)
  Somebody should inspect the atari_sdl.c why it doesn't use the
  Atari800_Frame system and possibly use it in the SDL port as well.

* DOC/TODO: some items removed, some edited.


2003-10-24  Piotr Fusik  <fox@scene.pl>
* sio.c: "Overmind" runs with NEW_CYCLE_EXACT and SIO patch enabled.
  I implemented NO_SECTOR_DELAY in 0.9.9i to allow running the "Overmind"
  demo.  Originally this hack relied on the xpos variable and thus wasn't
  NEW_CYCLE_EXACT compatible.  Now the delay occurs only between
  successive reads of sector 1, not every time reading sector 2.
  This makes every disk image boot 0.2 sec. faster.
* sio.h: NO_SECTOR_DELAY is internal to sio.c


2003-09-23  Piotr Fusik  <fox@scene.pl>
* ui.c, sio.h: added Rotate_Disks() to UI


2003-09-22  Perry McFarlane  <perry_m@fastmail.fm>
* antic.c: got sprite collisions working with NEW_CYCLE_EXACT
  (broken by mistake)
* antic.c: a fix for "Sweet Illusions" part with wireframe vectors
  (sprites highlighting the scrolling text)


2003-09-21  Piotr Fusik  <fox@scene.pl>
* input.c: implemented bit 6 of SKSTAT - now you can exit from
  the "spinning camera" part of "Cool Emotion"
* mkimg.c: general clean-up: int main, fixed #includes, etc.


2003-09-16  Perry McFarlane  <perry_m@fastmail.fm>
* antic.c: cycle-perfect CHACTL mid-scanline changes
* DOC/BUGS: updated


2003-09-15  Chris Martin <cmartin@ti.com>
* DOC/rdevice_faq.txt: detailed documentation


2003-05-28  Chris Martin <cmartin@ti.com>
* rdevice.c: fixed several bugs with the sockets version, and it now includes
  a serial port mode as well.  The R: device can now be emulated by network
  sockets or you can connect directly to the host serial ports (/dev/ttyS0,
  etc.) in order to talk to a real modem.

  There is a variable near the top of the rdevice.c file called 'r_serial'.
  When this is 0, network sockets are used; when it is 1, the RS232 port on
  the host is used. This variable should be moved to rt-config.h and the
  atari800 config file could have a line that says:

  R_SERIAL=1


2003-09-04  Petr Stehlik  <pstehlik@sophics.cz>
* compfile.c, devices.c: small fix for possibly undefined O_BINARY in the
  mkstemp emulation from Perry. This could help me compiling Atari800
  on Falcon where I have an older version of MiNTlib.
  Also make sure "config.h" is included wherever you rely on configure
  defines..

* DOC/BUGS: some bugs removed as direct response on Perry's newest patches.
  Possibly many more bugs from this list could be removed now.

* DOC/TODO: added three very important things to do at the top of this
  TO-DO list. Also added an item about configuring the R: device, this
  time at the bottom of the list.


2003-09-14  Perry McFarlane  <perry_m@fastmail.fm>
* win32/sound.c: round buffer to a sample pair if STEREO sound configured

* compfile.c, devices.c, configure.ac: make sure mkstemp() is defined and
  if it's not, emulate it using mktemp(). Helps compiling in mingw32.

* antic.c: CHBASE timing is cycle-exact now. Fixes Endless Dream (credits
  in the intro), among others.

* gtia.c: DMACTL timing is now improved. Fixes Sweet Illusions (sprites
  highlighting the scroll) and surely also other games and demos.


2003-09-04  Petr Stehlik  <pstehlik@sophics.cz>
* configure.ac: forgot to increase version

* util/export: added check for version in configure.ac

* ChangeLog: some older entries about fixing bugs in Debian BTS corrected

* debian/*: taken from fresh debian package of Atari800 1.3.1


** tagged as ATARI800_1_3_1

2003-09-04  Petr Stehlik  <pstehlik@sophics.cz>
* configure.ac: svgalib target added

* SVGAlib target dropped from Debian and RPM build scripts

* -rc1 removed from everywhere, it was causing pain for the build scripts

* sockets.txt renamed to r_device.txt

* Makefile.in: rewritten a bit the install process. Now actually becoming
  usable - for example "make install DESTDIR=/tmp" now does something
  useful. There's a bit more work to do - install the rest of documentation
  and write 'uninstall' target.

* atari800.spec: builds on the Makefile.in improvement. Now should finally
  install the man page everytime.


** tagged as ATARI800_1_3_1-RC1

2003-09-03  Petr Stehlik  <pstehlik@sophics.cz>
* dos/vga_gfx.h: wrong #endif fixed
* dos/atari_vga.c: cleaned up a bit, added #ifdef SHOW_DISK_LED
* configure_dos.bat: default target and bufferedlog pre-set
* atari.h: version increased to 1.3.1-rc1


2003-08-31  Petr Stehlik  <pstehlik@sophics.cz>
* rdevice.c: GPL header added (hope that it actually was free source before
  Chris brought it to Atari800 project)

* rt-config.c: R: patch is not enabled by default. It can be enabled in the UI

* ui.c: R: patch named as "Atari850 emulation via network" (better description
  welcome)

* DOC/sockets.txt: this is the explanation of R: - couple of excerpts from
  Atari800 mailing list mails.


2003-08-31  Ed Cogburn  <ecogburn@xtn.net>
* Makefile.in, configure.ac: rdevice.o compiled and linked in only on linux
  or Unix and unless --disable-riodevice was used when configuring.

* devices.c, atari.h: R: is compiled in only if R_IO_DEVICE is defined (see
  configure --enable-riodevice, note that it is defined by default)


2003-08-05  Petr Stehlik  <pstehlik@sophics.cz>
* atari.c: tried to fix a recent security issue known as CAN-2003-0630,
  found by Debian Security Audit Project, Debian BTS #203707.
  In order to provide a complex fix (better than the one suggested in BTS)
  I wrote code that is not looking very well but works correctly, hopefully.
  Nevertheless this fixes only the core module arguments parsing - the
  sound module and port specific modules do it on their own and that
  should be fixed as well. Best by going for GNU getopt!

  Also the osa/osb/xlxe/5200/basic rom loading options were not documented
  in the "-help" list. Fixed.

* atari_sdl.c: refresh_rate unused, removed


2003-08-05  Achim Haertel <achim.haertel@e-technik.tu-chemnitz.de>
* sio.c: fixed random timeout while sectorread at datatransfer with
         command frames.
  - added: xf551 hispeed commands (0xA1, 0xA2, 0xD0, 0xD2, 0xD7)
  - added: status command reports errors in last read/write operation

  caveat: the only commandframe which transfers in hispeed is sectorread,
  all other use normal speed in the emu

* pokey.c: xf551 hispeed transfer uses SIO speed 0x10


2003-07-04  Piotr Fusik  <fox@scene.pl>
* mzpokeysnd.c: added key click

* cpu.c: a fix for "CMC Demo" crashing NEW_CYCLE_EXACT emulator
  (the problem could probably exist in many other demos
  which play samples using IRQ)


2003-06-27  Perry McFarlane  <ce596@torfree.net>
* cycle_map.[ch]: a fix that prevents "Cool Emotion" demo from crashing
  NEW_CYCLE_EXACT emulator if P: patch is disabled


2003-06-18  Petr Stehlik  <pstehlik@sophics.cz>
* config.{sub,guess}: upgraded to latest versions from autotools-dev package
  in order to fix the Debian BTS #193397 (problem supporting the Debian mips
  and mipsel architectures).


2003-06-15  Petr Stehlik  <pstehlik@sophics.cz>
* compfile.c: quick fix for non-zlib capable environments


2003-05-28  Petr Stehlik  <pstehlik@sophics.cz>
* cpu_m68k.asm: major update, brings it to the 1.3.0+ level of cpu.c
  Thanks Gerhard.

* devices.c, atari.h, rdevice.[ch]: new R: device support (sockets).
  Originally written by Tom Hunt. Fixed, updated and prepared for Atari800
  integration by Chris Martin <cmartin@ti.com>. Thanks Chris!

* atari.c, ui.c, rt-config.[ch], Makefile.in: updated to allow run-time
  configuration of the R: entry in HATABS.

* DOC/sockets.txt: it's an excerpt from mails I got from Chris. It may
  explain some basic ideas about the R: device.


2003-03-07  Piotr Fusik  <fox@scene.pl>
* pia.[ch], memory.[ch], atari.c: fixed MultiJoy and PORTB:
  PORTA must be configured as output to select MultiJoy port.
  PORTB direction register can be read.
  PORTB lines stay high if configured as inputs
  ("Road Race" works in XL/XE mode - didn't since 1.2.4).
  Reset sets PORTB output (not 0xD301, which may be direction register
  at the moment) to 0xFF.
* cartridge.c, cassette.c, input.c: copyright fix (I created these files)


2003-03-03  Mark Grebe  <markgrebe@yahoo.com>
* ui.c: Save/Load Disk Set implemented. Result of Save is a text file
  containing names of the disk images that are currently in the drives.
  On saving drives with no disks are marked as "Empty" and on loading
  no changes are made to such drives. This allows the user to load multiple
  disk sets sequentially. File extension is ".set".


2003-03-03  Ed Cogburn  <ecogburn@xtn.net>
* mzpokeysnd.c: Initialize some uninitialized variables to fix gcc warning

* devices.c, compfile.c: tmpnam() -> mkstemp() to fix gcc warning

* atari_sdl.c: control key support added (how it could be compiled before?)

* configure.ac: massive rewrite, new way of handling our options. Config
  summary added.

* Makefile.in: a number of small changes, and OBJ is changed to OBJS for
  consistancy within configure.ac

* atari.c, diskled.c, sio.c: diskled module is compiled in only if it's
  enabled in configure.


2003-02-27  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt, DOC/CREDITS, DOC/README:
  new cartridge type


2003-02-24  Ed Cogburn  <ecogburn@xtn.net>
* added copyright headers to all *.c and *.asm files. Tried to collect
  as much info as possible from the various ChangeLogs but if the author
  in the header is incorrect please don't hesitate to send me a correction.

* fixed all *.h files to use the same consistent format (#ifndef _FILE_H_ )

* reformatted DOC/CREDITS


2003-02-19  Ed Cogburn  <ecogburn@xtn.net>
* configure process: cleans up some things, fixes a few little things,
  rewrote the message screen when nothing is typed, and reorganizes/changes
  the --enable options and the symbol names (defines) for those options.

  First, all options are now --enable-xxx, because I flipped all the inverse
  options. In other words, all symbol names declared for options here in
  configure now mean the feature is enabled if the symbol is defined, for
  consistancy, and to make it easier to figure out what options need to be
  set. The display when you use '--help' also puts those features which
  default to on at the top of the list, so its easy to look down the list
  and understand whats going on now.

  For those options that I flipped, I made the necessary fixes to the other
  source files, mainly changing #ifdef to #ifndef or vice-versa.
  I also changed symbol names where I thought it made sense. So for examples:
  'NOSNDINTER' is flipped to "INTERPOLATE_SOUND".
  'NO_VOL_ONLY' is flipped to 'VOL_ONLY_SOUND'.
  'CLIP' is now 'CLIP_SOUND'.
  'STEREO' is now 'STEREO_SOUND'.
  'JOYMOUSE' is now 'SVGA_JOYMOUSE'
  'USE_CURSORBLOCK' is now'SVGA_CURSORBLOCK' because these two options are
  only valid with the svgalib target, just like 'SVGA_SPEEDUP'. 'CPUASS'
  is now 'FALCON_CPUASM' since its only valid with the falcon target.
  Symbols that started with 'NO_' have been flipped, mostly to their original
  name without 'NO_'.  'SET_LED' is gone, and 'NO_LED_ON_SCREEN' has been
  flipped to 'SHOW_DISK_LED'.

2003-02-18  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: sends more Atari keys: SETTAB/CLRTAB, HELP, CAPSLOCK,
  INSERT_LINE/CHAR, DELETE_LINE/CHAR. Thanks to Mark for updating the file.

2003-02-17  Petr Stehlik  <pstehlik@sophics.cz>
* debian/ folder with deb scripts added (taken from official Atari800
  debian package created by Dale Scheetz)
* atari_sdl.c: window gets a title (thanks to Jozef for suggestion)

2003-02-11  Vasyl Tsvirkunov  <vasyl@pacbell.net>
* antic.c: added missing guard around extern reference
* mzpokeysnd.c: C standard compliance fix
* wince\*: WinCE/PocketPC updated

** tagged as 1.3.0

2003-02-10  Petr Stehlik  <pstehlik@sophics.cz>

* pokey.c, monitor.c: added include. Interesting is that my compiler at
  home hasn't complained but the gcc-3.2.2 here at work was uncompromising.
* atari.c: "--help", "--usage" and "--version" recognized now, though the
  former two just ask user to type "-help" again.
* pokeysnd.[ch]: fixed typo errors
* configure.in: alternate user and system-wide config file names for DOS
  and TOS ($HOME/atari800.cfg and C:\atari800.cfg) since their filesystem
  is still limited to 8+3 filenames.
* win32/sound.c: restored original behaviour of "-quality" switch.
* atari800.man: version increased, SDL option "-audio16" added.
* win32/sound.c: "-bit16" renamed to "-audio16" to be in sync with SDL port
* emuos.h: finally updated with proper URL
* most files in DOC folder updated with minor fixes

2003-02-09  Petr Stehlik  <pstehlik@sophics.cz>

* pokey.[ch]: 'stereo_enabled' variable moved to rt-config.c
* prompts.[ch]: YesNo() renamed to GetYesNo() and added GetYesNoAsInt()
  that allows user to enter Y/N in the RtConfigUpdate process
* rt-config.c: added 'enable_new_pokey'
  * added "ENABLE_NEW_POKEY" and "STEREO_POKEY" config options
  * removed all the code for backward compatibility since it could cause
    confusion if both old and new option existed in one config file
  * updated for GetYesNoAsInt() prompt
  * completely reworked the way the config file is searched for on disk:
    now it first tries in user's $HOME folder file named ".atari800.cfg"
    (which is configurable at compile-time) and later it falls back
    to system wide "/etc/atari800.cfg" (also configurable at compile-time).
  * also saving to user defined config file (-config <fname>) should work
    now (contrary to previous state where it saved to default file).
  * actual config filename is printed so users are sure which file was
    used (if their configured, or $HOME, or the system wide one)
* ui.c: updated for 'enable_new_pokey'
* pokeysnd.c: it wasn't clear to me how important the 'quality' parameter
  was so I added a function Pokey_set_quality(int). If it wasn't that
  important (was for testing only?) then let's remove this function.
* pokeysnd.c: a new function "Pokey_DoInit()" does the actual initialization
  of the Pokey emulation. It's been separated from Pokey_sound_init to
  allow calling from UI.
* atari_amiga.c, sound.c, sound_falcon.c, dos/sound_dos.c, win32/sound.c,
  wince/sound.c: updated for Pokey_sound_init()'s number of parameters.
* atari_sdl.c: removed "-mzpokey", "-oldpokey" and "-stereo" command line
  switches. This job (cleaning up the bloated command line options) was
  actually one of the main reasons for all my today's changes.
* configure.in: STEREO sound enabled by default. Shouldn't hurt since
  at the same time the 'enabled_stereo' is FALSE by default. So basically
  released binaries will be able to turn on stereo anytime users'll wish.
  Slower machines might want to disable this (as well as pixel-exact
  Antic emulation and a few more things) before building. Configure script
  could even take care of that if it knew which targets are running on
  slow machines.
* atari.h, DOC/NEWS, DOC/INSTALL updated with info from above.

** tagged as 1.2.10

2003-02-09  Petr Stehlik  <pstehlik@sophics.cz>

* pokeysnd.[ch]: added Pokey_set/get_quality() that allows me to switch
  the Pokey routines (Ron Fries/Michael Borisov) on-the-fly from UI.
* ui.c: Sound Settings submenu added. Allows changing the Pokey routines
  on-the-fly (automatically reboots) and also Mono/Stereo (if compiled in).
* emuos.lis: updated URL

2003-02-08  Petr Stehlik  <pstehlik@sophics.cz>

* atari_sdl.c: signal keyboard interrupt only when it's enabled
  (bugfix copied from input.c where it was fixed by Piotr)
* configure.in, acconfig.h: autoconf 2.5x required again. OS/2 and other
  platforms with old autoconf can use the pre-generated configure script
  found in released versions.
* atari_curses.c: exit() was not defined so I replaced it by return.
* atari_x11.c: some variables are used only if SHM is not defined
* configure.in, ui_basic.c: "CURSES" replaced by "USE_CURSES" so that
  compiler doesn't complain about a redefined stuff
* pokeysnd.c: null functions defined properly to avoid compiler warnings


2003-02-04  Petr Stehlik  <pstehlik@sophics.cz>

* configure.in, acconfig.h: after few days of autoconf 2.5x support I
  rolled back the changes since Ken Ames had a problem with upgrading
  autoconf on OS/2.

** tagged as 1.2.9

2003-01-27  Perry McFarlane  <ce596@torfree.net>

  I am going to send my cycle-exact patch now because I don't have any
  more time to work on it.  Hopefully it will be useful.  I hope
  it is not a problem to apply the patches.  I tried to make them
  to the current version.  They need more testing, though.
  In particular state saving is not tested.

  I have been working over the past few weeks on some improvements
  to the Atari800 emulator.
  I wanted to add support for mid-scanline changes to colours
  and players which are used by some (few) games and demos.
  I have written some code that does this, as a patch to
  the current code base.
  To avoid using the new code './configure --disable-cycleexact'
  This patch will fix display bugs in Master of the Lamps,
  Mail order monsters etc.
  However there were still a few bugs in some programs (see BUGS)
  and I haven't had time to fully test it.   I also have run out
  of personal time to work on this code for a while so I won't have
  much time to maintain it.   I think I should submit it now and
  hopefully it can be used to help improve the emulator.  If I had
  more time I would have completed more of the changes I wanted, see
  TODO in the code for some future ideas.
  As for efficency, it is probably going to be slower than normal
  to use this code, but it seems OK on my (fast) machine, so
  since it is a #define to remove the new technique I hope this
  will not be a problem.

  There is also a test program called T7.bas which I was using to
  help find out how the real Atari's timing works, it might
  be of interest to someone. (probably not) I am going to include
  it anyways along with some brief documentation. There is asm code
  t7.asm and a c program bdata.c that converts asm to Atari basic data
  statements.   T7.asm can be compiled with ATASM.

* antic.c, gtia.c, cycle_map.c:
  Cycle-exact changes to colours, player horizontal positions, player
  graphics.
  Basic idea: arrays cpu2antic and antic2cpu are created in
  cycle_map.c  Antic.c selects the correct cycle map
  based on the IR mode and scanline #, DMACTL screen width and HSCROL
  then cpu2antic_ptr and antic2cpu_ptr will convert the cpu's cycles
  to those of antic and vice-versa.  xpos will now represent the
  cpu's perception of cycles and not the acutual xpos.
  font_cycles, DMAR etc are not used.  When the cpu changes
  a display register, the display is updated partially to the point
  where the change occurs.  A function draw_partial_scanline does
  this using the existing antic drawing code in a somewhat hackish way.

  cycle-exact GTIA11_DELAY for "Demonic laughter" demo.
  using ring buffer approach

  Improved handling of DMACTL changes in the middle of a scanline.
  Fixes: Decathlon, Mail order monsters.
  Emulation of a DMACTL width change bug.

* cpu.c, monitor.c:
  The monitor remembers xpos and ypos in a buffer.
  A new command, YBREAK, can cause a breakpoint at a given scanline(ypos)
  setting YBREAK ypos+1000 causes a flickering line to appear at
  that point on the screen rather than breaking the cpu.  This allows
  debugging what happens at that scanline more easily.
  The memmove approach for remember_JMP, remmeber_PC has been replaced
  with a more efficent ring buffer approach
  The HISTORY command now gives a disassembly of the last N instructions
  where N=64 by default, and if the new cycle-exact code is used, it
  also gives the xpos and ypos of those instructions.
  correction to SIZEP2 SIZEP3 equates

* pokey.c:
  cycle-exact random number generator reads.

** tagged as 1.2.8

2003-01-27  Jason Duerstock  <jason@cluephone.com>

* PAGED_ATTRIB support, removing the attrib[] array and replacing it with
  a map of 256 pointers (one for each page of memory.  If the pointer is
  NULL, then the  memory[] array will be accessed directly.

  This change is activated through './configure --enable-paged'.

  In my estimation, this should improve the performance of the emulator,
  removing 64K of cache usage, and short-circuiting some switch {}
  statements.

  Note that this will render old saved-state files incompatible.

  There are a few short bits not finished yet, one of which being the
  "H:" device patch, which is mapped into 0xd1xx (parallel bus space),
  the other being state saving.

  My idea on how to do this is through the following struct:

	map_save save_map[2] = {
	        {0,     NULL,   NULL},          /* RAM */
	        {1,     NULL,   ROM_PutByte}    /* ROM */
	};

  The readmap and writemap will be compared with the pair of pointers
  in the struct, and a byte (the first column) will be saved for each
  page.

  On restore, the byte will be used to reconstruct the readmap and
  writemap.

* Several warnings have been cleaned up through inclusion of the proper
  headers.

* 'make distclean' has been added, to remove all the files generated
  from autoconf and ./configure

  In the process, I removed the (admittedly ugly) memory.[ch] redirection
  to memory-[pd].[ch].  If the general consensus is that PAGED_ATTRIB
  is a step in the right direction, then I will look at tacking PAGED_MEM
  back on through PAGED_ATTRIB.

  Any comments, suggestions, critiques, etc are appreciated.

joy> something has to be done regarding the saved-state files. Backward
     compatibility is a key thing in this area.

** tagged as 1.2.7

2003-01-27  Mark Grebe  <markgrebe@yahoo.com>
* devices.c:
  I've finally got around to finishing the upgrade to
  the hard disk emulation.  It now fully support
  subdirectories.  It supports CREDIR, RMDIR, CWD, ?DIR
  in SpartaDos and BW-DOS.  It also supports their XIO
  equivelents, and subdirectories work in all the other
  DOS commands as well.  It uses '>' and '>>' as
  directory seperators like SpartaDOS and BW-DOS.  I've
  also added support for the binary load commands, and
  added a path string for use with the H: devices, as
  the standard path won't work for them.

  It really needs a documentation writeup, but I've
  been gettting swamped at work, so that will come as I
  get time, but thought I would get this to everyone
  now, as I released it in the last release of
  Atari800MacX.  I've tested it on the Mac, as well as
  Windows and the Linux SDL port.

  The only other change that  is needed, is that
  Device_HHINIT should be called during Coldstart(), so
  that the working directories get reset to the root
  directory.

joy> Note that it may needs the same patches that were applied
     to devices.c in version 1.14. But I don't have an Amiga handy
     so I'll let someone else do it.

** tagged as 1.2.6

2003-01-27  Piotr Fusik  <fox@scene.pl>
* antic.c: swapped GTIA and CTIA artifacting modes
  (swapped by mistake in 0.9.9j)
* input.c: signal keyboard interrupt only when it's enabled
  (fixes Atari crash after SHIFT and * in Super Pacman 5200)

2002-12-16  Krzysztof Nikiel  <knik@poczta.onet.pl>
* colours.c: corrected color/BW conversion (Vasyl was right)

2002-12-08  Krzysztof Nikiel  <knik@poczta.onet.pl>
* pokeysnd.c mzpokeysnd.c: Added 16bit and quality sound setting support.
  Added multiple sound engines support.

2002-12-04  Mark Grebe <markgrebe@yahoo.com>
* devices.c: device H: now fully emulates the standard DOS functions
  Rename, Delete, Lock, Unlock, Note, Point, and Open for Update.
  Also changed the directory listing to look like the standard Atari
  DOS 2.0 listing. (The sector count is based on 256 byte sectors).

** released as 1.2.5 on 2002/12/02

2002-11-25  Piotr Fusik  <fox@scene.pl>
* DOC/cart.txt: fixed a few typos

2002-11-06  Petr Stehlik  <pstehlik@sophics.cz>
* ui.c:
  - applied patch from Ed Cogburn that fixes subsequent mounting
    of R/W disks in slot that was mounted R/O previously.
  - finally implemented the R/W <-> R/O mode switching using the Space Bar.
    Please note that this R/W <-> R/O switch is just temporary and does
    not change the writeprotect flag of ATR images. Besides, it cannot
    override this flag so you actually can't mount a writeprotected ATR
    image read/write using this Space Bar toggle.

* atari.c: Ken Ames sent me a very simple patch that is supposed to allow
    compiling the Atari800 on OS/2 "using Hob X11, XFree86, or IBM's X11
    server".

2002-09-16  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt: five new cartridge types (Nir Dary)

2002-09-05  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt, DOC/README: seven new cartridge types
  (by Nir Dary)

2002-08-26  Adam Bienias
* pokeysnd.c: a fix for better quality of sound

2002-08-21  Piotr Fusik  <fox@scene.pl>
* antic.c: ANTIC mode E + GTIA mode 9 ("Unconventional 2k", "Ass Kisiel")

2002-08-15  Piotr Fusik  <fox@scene.pl>
* DOC/BUGS: "Numen" soundtrack
* cartridge.[ch], ui.c, DOC/cart.txt: 1 MB XEGS cart
* input.c: Amiga/ST mouse right button ("Bombdown")
* input.h, input.c, pia.c: MultiJoy4 interface (4 joysticks for XL/XE)

** released as 1.2.4

2002-08-07  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c:
  - added atexit(SDL_Quit) to clean up after unsuccessful initialization.
  - fixed "-help" so that it doesn't initialize graphics mode.
  - added "-sound" and "-nosound" support so you can disable sound if
    your sound card is not plugged in :)
  - added "-dsprate" support
  - added support for the configure option --disable-SOUND
  - added Aflushlog() to Atari_Exit() thus debug info is displayed now
  - when sound card init failed the application continues to run with sound
    disabled (previously it was exiting immediately)
* atari_sdl.c, atari_falcon.c, cassette.c, atari.c, atari_vga.c:
  fixed "-help" formatting
* atari_curses.c: added "-help"
* atari.c, atari_curses.c, atari_x11.c: added Aflushlog() to Atari_Exit()
* atari_x11.c: fixed the clean up code in Atari_Exit(), added help_only mode
* sound.c: all printf's changed to Aprintf().
* atari.c: "-v" or "-version" displays the version correctly now
* atari_vga.c: added help_only mode and made sure Atari_Exit is aware of that
* sound_dos.c: removed EOL ("\n") from Aprint() (it adds the \n automatically)

2002-07-24  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c, DOC/cart.txt, DOC/README: 256K and 512K XEGS carts
  (thanks to Nir Dary)

2002-07-14  Piotr Fusik  <fox@scene.pl>
* atari.c, memory-d.c, ui.c: emulation of 576K and 1088K RAM machines
* pia.c: removed a hack that affected 1088 XE
* antic.c, memory-d.c, atari800.man: separate ANTIC access to extended memory
  for 130 XE and 320 Compy Shop
* DOC/README: updated features

2002-07-11  Krzysztof Nikiel  <knik@poczta.onet.pl>
* configure.in: Freature processing redesigned to be more consistent.
  Correct enable/disable info is printed in help.

** released as 1.2.3

2002-07-04  Vasyl Tsvirkunov  <vasyl@pacbell.net>
* ui.c,gtia.c,atari.h,cassette.h: cassette image loading is available from
  main menu. Also, main menu allows to persist "Hold Start" setting.
  Interlaced screenshot is commented out in main menu.
* ui_wince.c: updated to reflect above changes (one port-specific item was
  piggyback on interlaced screenshot, had to move).

2002-07-04  Piotr Fusik  <fox@scene.pl>
* atari.c, memory-d.c, ui.c: emulation of 16K RAM machines: 400 and 600XL
* cpu.c: cycle-exact LSR $D01A
* input.c: after playing with real paddles changed mouse_pot_min to 1
* monitor.c: fixed optype6502[] to match unofficial instructions

2002-06-27   Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: updated LPTjoy support to compile under Linux only. If there's
  another Unix flavor that can read parallel port using ioctl then it can be
  easily added. Just define LPTJOY for it (see the begining of atari_sdl.c).

2002-06-27  Piotr Wiszowaty  <pwiszowa@elka.pw.edu.pl>
* atari_sdl.c: added LPTjoy support for Linux

2002-06-23  Petr Stehlik  <pstehlik@sophics.cz>
* OK, the "-palette" patch from Andrew was completely wrong. I fixed it
  the right way and when I was at it I also moved the "-palette" command
  line option from main atari.c to colours.c.
* I also decided to fix the command line options in general, so I made some
  changes to atari.c and atari_x11.c.
* At last I corrected a bunch of things in atari_sdl.c so that now SDL port
  recognizes "-help". The other options now use single "-" to conform to
  the rest of Atari800 application.

2002-06-20  Petr Stehlik  <pstehlik@sophics.cz>
* atari.c: "unistd" header included - it should fix a start problem on FreeBSD
           4.5 according to an anonymous patch on sf.net.
* colours.c: loaded color palettes were ignored. Andrew Church posted a patch
             on sf.net that fixes it.
* atari800.man: manual page updated by Rob McMullen

2002-04-11  Piotr Fusik  <fox@scene.pl>
* pokey.c: allow high-speed disk i/o (Alpha-Load works)

2002-04-07  Christian Groessler <cpg@aladdin.de> and Petr Stehlik
* non-ANSI "t" parameter in fopen ("rt" and "wt" used for CR/LF files
  in DOS-like operating systems) removed since it was causing problems
  with KallistiOS Dreamcast library. Linux glibc could also be affected
  as it aborts scanning the mode parameter when it encounters an unknown
  char (consider "wt+"). Code was updated to take care of the possible
  extra \r before \n at end of fgets string. fputs() should be OK as
  the text mode is most probably the default mode.

2002-03-29  Vasyl Tsvirkunov <vasyl@pacbell.net>
* Dirty update scheme is completed

2002-03-18  Piotr Fusik  <fox@scene.pl>
* antic.c: NMIST bit 5 is external NMI (not reset) status in Antic,
  unused in Atari
* input.c: second button in 5200 joystick generates "Break key" IRQ
* monitor.c: "DLIST" now accepts address as an argument

2002-02-13  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: fixed screen offset in 32bpp (thanks to Suzanne Archibald)
* atari_sdl.c: fixed sound initialisation (thanks to Tomas Mraz)
* pokey.c: fixed sound channel 1 in stereo mode (thanks to Radek Sterba)

2002-02-04  Piotr Fusik  <fox@scene.pl>
* DOC/BUGS: updated list of games

2002-01-10  Jindrich Kubec <kubecj@asw.cz>
* new cartridge type added
* last #include "zlib.h" found and fixed.

** released as 1.2.2

2001-12-31  Petr Stehlik  <pstehlik@sophics.cz>
* renamed cpu_m68k.s to cpu_m68k.asm because it's not in gas format
* renamed *.s files in falcon/ to *.asm (same as above)
* updated Makefile.in to run xgen on *.asm files only

2001-12-29  Petr Stehlik  <pstehlik@sophics.cz>
* joysticks (both real and keyboard) in SDL port fixed.
* configure now allows to --enable-CPUASS for m68k assembler CPU core.

2001-12-24  Jakub Bogusz <qboosh@pld.org.pl>
* memory corruption in input.c (joystick checking) fixed.

2001-12-17  Petr Stehlik  <pstehlik@sophics.cz>

* configure.in changed so it doesn'ta ask any questions by default
  Use --enable-FEATURE or --disable-FEATURE.
* configure.in updated for better Falcon support

2001-12-08  Krzysztof Nikiel  <knik@poczta.onet.pl>

* acconfig.h: unused symbol COMPILED_PALETTE removed
* win32/atari1.ico: new windows icon (actually an old one but modified)
* win32/atari.rc: new icon included

2001-12-07  Piotr Fusik  <fox@scene.pl>

* cpu.c: #include <stdlib.h> for exit()
* rtime.c: #include <string.h> for strcmp()

2001-12-04  Jacek Poplawski  <jpopl@interia.pl>

* log.c, log.h: fixed undefined Aflushlog
* atari_sdl.c: cleanups for readability

2001-12-04  Petr Stehlik  <pstehlik@sophics.cz>

* util/sethdr, util/act2html.c: added Nathan's sethdr perl script and Piotr's
  act2html C code
* SDL port now calls Aflushlog() before it exits
* fixed win32 compile and runtime problems (thanks to Nathan)

2001-12-03  Petr Stehlik  <pstehlik@sophics.cz>

* configure.in: updated to support the Atari Falcon port
* Falcon port' proprietary -DDMASOUND changed to general -DSOUND

2001-11-27  Krzysztof Nikiel  <knik@priv.onet.pl>

* colours.c: default palette changed to the real palette created by
  Zdenek Eisenhammer.
* colours.c: code to adjust palette properties improved and moved
  to separate function Palette_Format.

2001-11-26  Piotr Fusik  <fox@scene.pl>

* colours.c: #include <string.h> for strcmp()

2001-11-22  Krzysztof Nikiel  <knik@poczta.onet.pl>

* DOC/INSTALL: added autoconf instructions
* acconfig.h: added SVGALIB symbol

2001-11-18  Piotr Fusik  <fox@scene.pl>

* ui.c: fixed a bug: modification of string literals

2001-11-14  Vasyl Tsvirkunov <vasyl@pacbell.net>

* WinCE: Fixed a few keyboard issues
* Linear filter applied to screen image in portrait mode (looks much better)

2001-11-09  Piotr Fusik  <fox@scene.pl>

* pbi.c, pbi.h, Makefile.in: removed pbi module (it did nothing useful and
  was out of date)

2001-11-04  Piotr Fusik  <fox@scene.pl>

* input.h, input.c: added Trak-Ball emulation ("Missile Command")
  and blocked opposite joystick directions (good for "Mario Bros.")
* cartridge.h, cartridge.c, ui.c: right slot cartridge

2001-10-29  Piotr Fusik  <fox@scene.pl>

* monitor.c: "DLIST" didn't stopped on JVB if Display List had multiple of 15
  instructions
* cpu.c, gtia.h: removed i386 asm tricks - gcc 2.95.3 does it better :-)
* atari.h, gtia.c: changed implementation of WSYNC/VCOUNT timing
  (previously it assumed that the instruction accessing VCOUNT had 4 cycles)
* antic.c: corrected timing of DLISTL/H ("Spelunker" works)

2001-10-26  Piotr Fusik  <fox@scene.pl>

* atari_vga.c, configure.in: moved atari_vga.c from src to src/dos
* configure.bat, configure_dos.bat: renamed configure.bat to configure_dos.bat
  (in bash 2.04.7 "./configure" runs configure.bat instead of configure)
* atari.c, memory-d.c: made 130 XE state files compatible with previous
  versions
* ui.c: current system is selected by default in SelectSystem()
* input.h, antic.c, input.c: light gun emulation,
  "-mouse gun" is same as "-mouse pen", except that the button is inverted
* input.c: set default light pen/gun offsets to (42, 2) - good for light gun
  games; a bigger light pen/gun cursor

2001-10-16  Krzysztof Nikiel  <knik@poczta.onet.pl>

* ui_basic.c: better keyboard autorepeat rate
* configure.in: added AC_EXEEXT; removed A800_MAIN; used $target variable
* Makefile.in: improved dep target; added EXEEXT
* autogen.sh: new script to create 'configure'

2001-10-12  Piotr Fusik  <fox@scene.pl>

* cartridge.h, cartridge.c, ui.c: added 8 KB and 4 KB cartridges for 5200

2001-10-11  Piotr Fusik  <fox@scene.pl>

* atari_curses.c, ui_basic.c, ui.c: removed CURSES-specific code from ui.c,
  added curses_screen for UI

2001-10-11  Krzysztof Nikiel  <knik@poczta.onet.pl>

* ui_basic: added atari_sync() call in keyboard loop--keyboard is sampled
  at reasonable rate

2001-10-10  Piotr Fusik  <fox@scene.pl>

* atari_x11.c, atari_curses.c: compilable now
* configure.in, ui.c: corrected typos

2001-10-10  Krzysztof Nikiel  <knik@poczta.onet.pl>

* sound.c: improved output space calculation--can work much better
  with some drivers

2001-10-09  Piotr Fusik  <fox@scene.pl>

* ui.c: OSS 'M019' -> 'M091'

2001-10-08  Piotr Fusik  <fox@scene.pl>

* input.c: removed CVS keywords
* ui.c: corrected stack bug (thanks Vasyl) and renamed some cartridge types

2001-10-07  Piotr Fusik  <fox@scene.pl>

* input.c: smoother mouse pointer movement in Amiga/ST/joy modes
* atari_basic.c: removed Atari_POT (unused)
* pokey.c: fixed SEROUT (Sparta DOS X runs)

2001-10-05  Piotr Fusik  <fox@scene.pl>

* atari.c, cartridge.h, cartridge.c, ui.c: added Bounty Bob Strikes Back
  cartridge for 800/XL/XE (thanks Jindroush)
* atari.c: H: didn't worked until a patch was toggled

2001-10-03  Piotr Fusik  <fox@scene.pl>

* input.h, input.c: finished mouse code
* pokey.c: added INPUT_Scanline() call (to emulate Amiga and ST mice)
* rt-config.c: fixed default TV mode in RtConfigUpdate
* cpu.c: killed some warnings, AtariEscape -> Atari800_RunEsc
* atari.h, atari.c, devices.c, devices.h, memory-d.c, binload.c: rewritten
  escape codes handling
* devices.c: corrected Device_isvalid (isalnum((char) 0x9b) == 1 !)
* binload.c: killed a warning, used dGetWord/dPutWord
* diskled.h, diskled.c, sio.c, atari.c, atari_vga.c, platform.h:
  SET_LED and Atari_Set_LED are no longer used, Update_LED -> LED_Frame
* atari.h, atari.c: added screen_visible_* variables
* input.c, atari_vga.c, platform.h: removed Atari_POT: special handling
  of 5200 joysticks is in input.c
* Makefile.in: updated

2001-10-03  Krzysztof Nikiel  <knik@poczta.onet.pl>

* win32/atari_win32.c, atari_svgalib.c: keyboard interface updated
* win32/main.c: added mouse input

2001-10-01  Piotr Fusik  <fox@scene.pl>

* dos/vga_asm.s: corrected a bug in make_darker and commented whole routine
  out (it was used in ALLEGRO version only).
* ui.h, devices.c, cpu.c, atari.c: #include "ui.h" for CRASH_MENU externs
* memory-d.h: added a few useful macros (dGetWord, etc.)
* sio.c, cpu.c, memory-d.c, atari.c, antic.c: updated for new macros in
  memory-d.h
* cartridge.h, cartridge.c, ui.c: added new cartridge type: Atrax 128 KB
  (thanks Jindroush)
* antic.h, antic.c, ui.c: renamed artif_init to ANTIC_UpdateArtifacting
* ui.c: CURSES code cleanup (spaces, memory[], goto)

2001-09-27  Piotr Fusik  <fox@scene.pl>

* pia.c, pia.h: Atari_PORT -> PORT_input
* pokey.c, pokey.h: Atari_POT -> POT_input
* input.h: added INPUT_Initialise and a few mouse variables
* input.c: added INPUT_Initialise, PORT_input, POT_input
* atari_basic.c: removed Atari_CONSOL and Atari_PEN (not used anymore)
* cpu.c: fixed nasty bug with extern int wsync_halt
  - there's UBYTE wsync_halt in antic.c (oooooppss!)
* cpu_m68k.s: fixed wsync_halt bug, bounty_bob1/2 -> CART_BountyBob1/2,
  SupertCart_GetByte/PutByte -> CART_GetByte/PutByte
* input.h: mouse_speed, INPUT_CenterMousePointer, INPUT_DrawMousePointer
* input.c: emulation of Paddles, Atari Touch Tablet, Koala Pad
  and Light Pen/Light Gun
* atari.c: called INPUT_Initialise and INPUT_DrawMousePointer
* atari_vga.c: updated mouse code
* Makefile.in: updated

2001-09-26  Piotr Fusik  <fox@scene.pl>

* input.c, input.h: added mouse_mode, mouse_port, 5200 key codes
* antic.h, antic.c, platform.h, atari_vga.c: light_pen_enabled, Atari_PEN ->
  mouse_mode==MOUSE_PEN, PENH_input, PENV_input (direct mouse support
  for light pen emulation)

2001-09-22  Piotr Fusik  <fox@scene.pl>

* input.h, input.c: added key_consol, joy_autofire, AKEY_SHFT etc.
* input.c: fixed key_break and key_code
* atari.h: declared nframes and deltatime, AKEY_SHFT etc. moved to input.h
* gtia.c, platform.h, atari_vga.c: Atari_CONSOL -> key_consol,
  TRIG_auto -> joy_autofire

2001-09-21  Piotr Fusik  <fox@scene.pl>

* antic.c: optimized character modes
* devices.c: removed unused variable
* atari.h, atari.c: Atari800_Frame(): new function that groups emulation
  of one Atari frame. The functions for individual modules will be called
  ANTIC_Frame(), GTIA_Frame(), etc.
* input.h, input.c: new module, for keyboard/joystick/mouse
* pokey.h: declared SKSTAT (for input)
* atari_vga.c, ui.c: included input.h
* atari.h: joystick positions and Atari key codes moved to input.h
* atari.c: part of keyboard handling moved to INPUT_Frame()
* Makefile.in: updated for the input module
* antic.h, antic.c, ataripcx.c, ui.c: ANTIC_RunDisplayList -> ANTIC_Frame
* gtia.h, gtia.c: GTIA_Triggers -> GTIA_Frame
* atari.h: removed draw_display, added Atari800_Initialise
* atari.c: main() is now in platform-dependent code, should call
  Atari800_Initialise and Atari800_Frame
* input.c, input.h, pokey.c, atari_vga.c: SHIFT_KEY -> key_shift (consistent
  naming convention)
* pokey.c, atari_vga.c: removed KEYPRESSED (not needed, since INPUT_Frame()
  can check if key_code!=AKEY_NONE)
* atari_basic.c, atari_vga.c: added main()

2001-09-20  Piotr Fusik  <fox@scene.pl>

* gtia.c: optimized players in new_pm_scanline

2001-09-19  Piotr Fusik  <fox@scene.pl>

* pokey.c: corrected RANDOM

2001-09-17  Piotr Fusik  <fox@scene.pl>

* antic.c: optimized: memcpy in ANTIC_Load
* memory-d.c, memory-d.h, atari.c: Initialise_Atari... functions moved
  to atari.c (they don't need to be memory-d/-p specific, it should simplify
  finishing PAGED_MEM code)
* atari.c, atari.h, atari_vga.c, cartridge.c, gtia.c, memory-d.c, pia.c,
  rt-config.c, rt-config.h, statesav.c, ui.c:
  machine, mach_xlxe, Ram256, os, default_system -> machine_type, ram_size
  (removed lots of confusing variables, now it's easier to add new machines
  - 16,192,1088,... KB of RAM)
* cartridge.c: killed a warning
* rt-config.c, rt-config.c, ui.c, memory-d.c, atari.c:
  enable_c000_ram -> ram_size = 52
* memory-d.c: malloc/free atarixe_memory (don't waste 256 KB if not
  in XE mode)
* atari.c: shortened state file of 130 XE

2001-09-16  Piotr Fusik  <fox@scene.pl>

* atari.c, rt-config.c, rt-config.h: removed default_tv_mode (not needed,
  since there's tv_mode)

2001-09-09  Piotr Fusik  <fox@scene.pl>

* pia.h: declared atari_basic and selftest_enabled
* rt-config.h, rt-config.c, atari.c, ui.c: hold_option -> disable_basic
* memory-d.h, memory-d.c, cartridge.c:o "-basic" and "-nobasic" work
  for Atari 800 (Atari BASIC is attached as a cartridge in Atari 800)

2001-09-08  Krzysztof Nikiel  <knik@poczta.onet.pl>

* compfile.c: unused definitions and inclusions removed
* ui.c, rt-config.h, rt-config.c: used FILENAME_MAX instead of
  MAX_FILENAME_LEN
* sio.c, sio.h: used FILENAME_MAX instead of FILENAME_LEN

2001-09-06  Piotr Fusik  <fox@scene.pl>

* atari.h: MENU_PATCHES -> MENU_SETTINGS

2001-09-04  Piotr Fusik  <fox@scene.pl>

* pokey.c: implemented SKRES and bit 5 of SKSTAT
* cartridge.c: CART_Remove works in 5200 mode
* ui.c: hold_option, enable_c000_ram and rtime_enabled available in menu

2001-09-03  Piotr Fusik  <fox@scene.pl>

* pokey.c: call SIO_GetByte() when triggering IRQ, not when reading SERIN
  ("Timeless Announcement" loads now)
* sio.c: disk drive answers 'E' to an unknown command.

2001-08-29  Piotr Fusik  <fox@scene.pl>

* cassette.h, cassette.c: using FILENAME_MAX from stdio.h

2001-08-27  Piotr Fusik  <fox@scene.pl>

* pokey.c: RANDOM is 0xff if (SKCTLS&0x03)==0 (for stereo detection in
  "Sheol")

2001-08-27  Krzysztof Nikiel  <knik@poczta.onet.pl>

* acconfig.h, config.h.in: safer 'win32' definition
* win32/main.c: used _endthread() call without parameter

2001-08-24  Piotr Fusik  <fox@scene.pl>

* pokey.h: declared stereo_enabled (for monitor.c)
* pokey.c: initialize KBCODE to 0xff - for a stereo detection routine

2001-08-19  Krzysztof Nikiel  <knik@poczta.onet.pl>

* DOC/INSTALL: windows instructions

2001-08-16  Piotr Fusik  <fox@scene.pl>

* atari.c: selecting cartridge type didn't worked in 5200 mode
* memory-d.c: deleted CART_Remove() in Initialise_Atari*, so auto-switching
  to 5200 mode when inserting a 5200 cartridge works
* cartridge.c: fix for Bounty Bob 5200 cartridge (thanks Jindroush)

2001-08-06  Piotr Fusik  <fox@scene.pl>

* colours.c: -help bug fix
* cassette.h, gtia.h, gtia.c, atari.c: hold_start support
  (emulator presses Start and Space to boot the tape)
* cassette.c: CAS format support
* Makefile.in: added cassette.[ch]

2001-08-03  Piotr Fusik  <fox@scene.pl>

* cassette.h, cassette.c: new module, for cassette recorder emulation
* sio.h: declared SIO_ChkSum (for cassette.c)
* atari.c, sio.c: cassette support

2001-07-25  Piotr Fusik  <fox@scene.pl>

* sio.h, compfile.c, atari.c, sio.c: added SIO_Exit(), code clean ups
* sio.c: Format Disk rewritten. Now it can resize both ATR and XFD images.
  The ATR header is being updated. Double density formatting works.

2001-07-24  Piotr Fusik  <fox@scene.pl>

* antic.c: speeded up Vasyl's code

2001-07-23  Piotr Fusik  <fox@scene.pl>

* sio.c: corrected and added checks if drive number is in range 1-8

2001-07-21  Piotr Fusik  <fox@scene.pl>

* sio.c: made double density ATR images compatible with SIO2PC

2001-07-20  Piotr Fusik  <fox@scene.pl>

* monitor.c: "C 600 ABCD" does the same as "C 600 CD AB".
  "DLIST" - 1 KB boundary respected. "POKEY" command.
  "S" without parameters repeats last search.
  Corrected Petr's mistake in rev.1.4.
* pia.c, pia.h: renamed atarixl_os to atari_os (this array may be used
  also for storing 800 and 5200 OSes)
* rt-config.h, rt-config.c, atari.c, atari.h, memory-d.c, memory.d.h:
  removed enable_rom_patches, added: enable_h_patch, enable_p_patch and
  Atari800_UpdatePatches(). SIO, H: and P: patches are now independent
  and can be toggled at run-time (original OS is saved in atari_os).
  Removed SetSIOEsc() and RestoreSIO().
* atari.h, ui.c: added "Atari OS patches" menu item
* cpu.c, devices.c, atari.h: removed ESC_BREAK (it wasn't really an escape
  code, it was used for entering the monitor - the monitor can be called
  directly)
* devices.c: replaced K_Device with Device_KHREAD, replaced E_Device with
  Device_EHOPEN, Device_EHREAD and Device_EHWRITE (now K: and E: handlers
  are implemented in the same way as H: and P:)
* rtime.h, rtime.c: new module, created from R-Time 8 emulation routines in
  supercart
* cartridge.h, cartridge.c: new module, for inserting cartridges (previously
  in memory-d) and bank-switching (previously in memory-d and supercart)
* monitor.c: not displaying rom_inserted in "PIA" command (because the new
  cartridge types can be disabled by software)
* atari.h: added declarations of mach_xlxe and Ram256,
  removed cartridge types and Insert/Remove functions for cartridges
* rt-config.c: removed #define TRUE/FALSE and extern int Ram256 (it's in
  atari.h)
* memory-d.h, memory-d.c: rewritten to support the new cartridge module
* pia.c: Ram256 moved to atari.c (it's not related with PIA)
* gtia.h: declared TRIG and TRIG_latch (accessed by memory-d)
* pia.c, gtia.c: cartA0BF_enabled is used instead of rom_inserted
* ui.h: declared SelectCartType(), removed mach_xlxe and Ram256
  (which are declared in atari.h)
* atari.c: support for new rtime and cartridge modules
* ui.c: inserting, removing and converting of new cartridge types
* Makefile.in, common.mak: added cartridge and rtime, removed supercart
* supercart.c, supercart.h: removed - routines moved to new modules cartridge
  and rtime

2001-07-19  Piotr Fusik  <fox@scene.pl>

* binload.c: 0x31 stored at 0x300 ("Studio Dream" loads now)
* supercart.c: added "byte &= 0x0f" to prevent out of bounds accesses
  to regset[]
* pokey.c: SKSTAT variable renamed to SKCTLS to avoid confusions
  (it's the write-only, not the read-only Pokey register)
* devices.c: replaced "dGetByte(0x2e)" with "regX" in H: handler routines
  (fixes problems with Atari BASIC's GET/PUT/INPUT/PRINT)
* cpu.c: on reset, the I flag is set (now reset works if stuck in interrupts)
* pia.c: & 0x3f on read PACTL and PBCTL (bits 6 and 7 are read-only in real
  PIA)
* antic.c: described cycle-exact Antic timing for a few modes
  (not implemented)
* devices.c: added open mode 9 (append) for H: device
* pokey.c: potentiometers emulation improved: POTGO and ALLPOT registers
  and bit 2 of SKCTLS implemented, "Tree Surgeon" no longer hangs
* pokey.c, pokey.h, pokeysnd.c, pokeysnd.h: moved a few definitions from
  pokeysnd to pokey (the goal is not to duplicate the variables of same
  meaning in pokey and pokeysnd, e.g. AUDC/AUDF/AUDCTL)
* pokey.c: blocked POTs, SERIN, SEROUT, KBCODE, IRQ, SKSTAT, SKCTLS
  in the second Pokey chip, second Pokey unaccesible until stereo_enabled set
  (helps some stereo detection routines)
* pokey.c, pokey.h, pokeysnd.c: replaced bit17[] with poly9_lookup[] and
  poly17_lookup[]. bit17[] was initialized with rand(), while poly9/17_lookups
  use the original POKEY algorithms. Moreover, poly9/17_lookups are smaller,
  which saves ca. 100 KB of memory.
* atari.h, pokey.h, antic.c, pokey.c: true RANDOM emulation (both 9- and
  17-bit poly) ! Not using rand() anymore. POKEY_Frame() and cpu_clock are
  needed for it. Try the "Bank Bang!" game.
* antic.c, gtia.c: the background color can be changed inside a scanline.
  Currently implemented only for blank lines without PMG.
  Try the "Partyland" part of the "Bitter Reality" demo.
  The feature can be disabled by defining NO_CYCLE_EXACT.
* pokey.c: STIMER fixed (speech in "Mirax Force" is better, but still
  not perfect)
* cpu.c: slight optimization of ROL and ROR
* cpu.c: Read-Modify-Write (RMW) instructions (ASL, INC, etc.) store
  the unmodified value of $D01A before they store the modified value.
  Now you can see the white dots made with INC $D01A.
* ui.h: removed declaration of atarixl_os (why was it declared here?)
